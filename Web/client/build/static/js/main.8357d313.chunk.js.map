{"version":3,"sources":["logo.svg","components/Charts.js","pages/Dashboard.js","pages/Admin.js","App.js","reportWebVitals.js","index.js"],"names":["Chart1","props","React","useState","data","setData","useRef","Date","getTime","dateRange","setDateRange","showPeriodError","setShowPeriodError","startDate","endDate","maxPeriod","show350","setShow350","show460","setShow460","showGas","setShowGas","autoY","setAutoY","a","console","log","updateGraph","requestOptions","method","headers","fetch","URLSearchParams","start","end","then","response","ok","json","Error","statusText","chartData","catch","error","gas","value","dt","cutter0","status","cutter1","useEffect","Col","xs","className","ResponsiveContainer","width","height","ScatterChart","Legend","verticalAlign","XAxis","dataKey","domain","name","tickFormatter","unixTime","toLocaleString","type","YAxis","yAxisId","label","angle","position","orientation","tickCount","Tooltip","formatter","Scatter","line","stroke","fill","lineJointType","lineType","Row","style","dateFormat","selectsRange","onChange","update","withPortal","onCalendarClose","handleDateChange","Button","variant","onClick","ButtonGroup","Chart2","today","setHours","selectedDate","setSelectedDate","direction","newDate","toISOString","day","params","date","toLocaleDateString","Dashboard","deviceList","setDeviceList","workshopStats","setWorkshopStats","updateWorkshopStats","lastHourAverage","lastGasReadingValue","lastGasReadingDt","usersToday","timeUsed","morningThreshold","isDangerous","isAboveMorning","message","updateDeviceList","devices","index","nickname","interval","setInterval","clearInterval","id","Navbar","bg","expand","fixed","Container","Brand","href","Toggle","Collapse","Nav","Link","map","device","i","md","Image","fluid","src","alt","toFixed","toLocaleTimeString","hour","minute","second","DeleteUserModal","readOnly","setReadOnly","cardID","setCardID","scannerEnabled","setScannerEnabled","loadingSpinner","setLoadingSpinner","showSuccessMessage","setShowSuccessMessage","showErrorMessage","setShowErrorMessage","shortCodeInvalid","setShortCodeInvalid","cardIDInvalid","setCardIDInvalid","fieldErrorMsg","setFieldErrorMsg","cardIdInput","shortCode","handleKeyPress","event","resetModal","key","preventDefault","current","length","currCardId","onSubmit","shortC","card","Authorization","sessionStorage","getItem","body","JSON","stringify","card_id","short_code","setTimeout","onHide","kick","focus","Modal","size","centered","ref","onKeyPress","onBlur","Header","closeButton","Title","Body","Form","Group","Label","Control","placeholder","isInvalid","Feedback","disabled","AdminModalFooter","cancel","actionButton","actionButtonRed","ChangePasswordModal","passwordError","setPasswordError","oldPassword","newPassword","oldPass","newPass","old_password","new_password","isValid","AddUserModal","Footer","Spinner","animation","Admin","addUserModalShow","setAddUserModalShow","delUserModalShow","setDelUserModalShow","changePassModalShow","setChangePassModalShow","loggedIn","setLoggedIn","loginReadOnly","setLoginReadOnly","passwordErrorMessage","setPasswordErrorMessage","showPasswordSpinner","setShowPasswordSpinner","showKickedMessage","setShowKickedMessage","loginPassword","onLoginButton","password","setItem","token","onKickedOut","removeItem","xl","show","App","path","element","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8357d313.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from \"react\";\r\n\r\nimport {\r\n  CartesianGrid,\r\n  Legend,\r\n  ResponsiveContainer,\r\n  Brush,\r\n  Scatter,\r\n  ScatterChart,\r\n  Tooltip,\r\n  XAxis,\r\n  YAxis,\r\n} from \"recharts\";\r\n\r\nimport \"../index.css\";\r\n\r\nimport {\r\n  Navbar,\r\n  Container,\r\n  Nav,\r\n  Column,\r\n  Row,\r\n  Col,\r\n  Image,\r\n  Overlay,\r\n  Tooltip as BSTooltip,\r\n  Alert,\r\n  Button,\r\n  ButtonGroup,\r\n} from \"react-bootstrap\";\r\n\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\n\r\nfunction Chart1(props) {\r\n  const [timeSinceUpdate, setTimeSinceUpdate] = React.useState(0);\r\n  const [data, setData] = React.useState({});\r\n  const target = React.useRef(null);\r\n\r\n  const [dateRange, setDateRange] = React.useState([\r\n    new Date(new Date().getTime() - 24 * 60 * 60 * 1000),\r\n    new Date(),\r\n  ]);\r\n  const [showPeriodError, setShowPeriodError] = React.useState(false);\r\n  const [startDate, endDate] = dateRange;\r\n  const maxPeriod = 24 * 60 * 60 * 1000 * 7; //7 days in milliseconds\r\n\r\n  const [show350, setShow350] = React.useState(true);\r\n  const [show460, setShow460] = React.useState(true);\r\n  const [showGas, setShowGas] = React.useState(true);\r\n  const [autoY, setAutoY] = React.useState(false);\r\n\r\n  async function handleDateChange() {\r\n    setShowPeriodError(false);\r\n    if (endDate.getTime() - startDate.getTime() > maxPeriod) {\r\n      console.log(\"7 days max\");\r\n      setShowPeriodError(true);\r\n      await setDateRange([\r\n        startDate,\r\n        new Date(startDate.getTime() + maxPeriod),\r\n      ]);\r\n    }\r\n    updateGraph();\r\n  }\r\n\r\n  React.useEffect(() => {\r\n    updateGraph();\r\n  }, []);\r\n\r\n  async function updateGraph() {\r\n    const requestOptions = {\r\n      method: \"GET\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n    const params = {\r\n      start: startDate,\r\n      end: endDate,\r\n    };\r\n    fetch(`/api/getchart1data?` + new URLSearchParams(params), requestOptions)\r\n      .then((response) => {\r\n        if (response.ok) {\r\n          return response.json();\r\n        } else {\r\n          console.log(\"Error updating Chart1\");\r\n          throw new Error(response.statusText);\r\n        }\r\n      })\r\n      .then((chartData) => {\r\n        console.log(chartData);\r\n        setData(chartData);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n        setData({\r\n          gas: [\r\n            { value: 14, dt: 1503617297689 },\r\n            { value: 15, dt: 1503616962277 },\r\n            { value: 15, dt: 1503616882654 },\r\n            { value: 20, dt: 1503613184594 },\r\n            { value: 15, dt: 1503611308914 },\r\n          ],\r\n          cutter0: [\r\n            { status: 1, dt: 1503617247689 },\r\n            { status: 0, dt: 1503617248689 },\r\n            { status: 0, dt: 1503616965277 },\r\n            { status: 1, dt: 1503616966277 },\r\n            { status: 1, dt: 1503616882254 },\r\n            { status: 0, dt: 1503616883254 },\r\n            { status: 0, dt: 1503613133594 },\r\n            { status: 1, dt: 1503613134594 },\r\n            { status: 1, dt: 1503611304914 },\r\n            { status: 0, dt: 1503611305914 },\r\n          ],\r\n          cutter1: [\r\n            { status: 1, dt: 1503617247389 },\r\n            { status: 1, dt: 1503616965477 },\r\n            { status: 0, dt: 1503616882454 },\r\n            { status: 1, dt: 1503613133594 },\r\n            { status: 1, dt: 1503611305414 },\r\n          ],\r\n        });\r\n      });\r\n  }\r\n\r\n  return (\r\n    <Col xs={12}>\r\n      <div className=\"dash-card\">\r\n        <h3>Usage vs Gas: Long-term</h3>\r\n        <ResponsiveContainer width=\"95%\" height={500}>\r\n          <ScatterChart>\r\n            <Legend verticalAlign=\"top\" height={50} />\r\n            <XAxis\r\n              dataKey=\"dt\"\r\n              domain={[\"auto\", \"auto\"]}\r\n              name=\"Time\"\r\n              tickFormatter={(unixTime) => new Date(unixTime).toLocaleString()}\r\n              type=\"number\"\r\n            />\r\n            <YAxis\r\n              yAxisId=\"left\"\r\n              dataKey=\"value\"\r\n              name=\"Gas\"\r\n              label={{ value: \"Gas\", angle: -90, position: \"insideLeft\" }}\r\n              domain={autoY ? [\"dataMin\", \"dataMax\"] : [0, 350]}\r\n            />\r\n            <YAxis\r\n              yAxisId=\"right\"\r\n              dataKey=\"status\"\r\n              name=\"Usage\"\r\n              orientation=\"right\"\r\n              tickFormatter={(status) => (status ? \"In use\" : \"Available\")}\r\n              tickCount={2}\r\n              label={{\r\n                value: \"Laser cutter usage\",\r\n                angle: -90,\r\n                position: \"center\",\r\n              }}\r\n            />\r\n            <Tooltip\r\n              formatter={(value) => {\r\n                if (value > 1000000) {\r\n                  return new Date(value).toLocaleString();\r\n                } else if (value == 1) {\r\n                  return \"In use\";\r\n                } else if (value == 0) {\r\n                  return \"Available\";\r\n                } else {\r\n                  return value;\r\n                }\r\n              }}\r\n            />\r\n            {showGas ? (\r\n              <Scatter\r\n                yAxisId=\"left\"\r\n                data={data.gas}\r\n                line={{ stroke: \"#8884d8\" }}\r\n                fill=\"#8884d8\"\r\n                lineJointType=\"monotoneX\"\r\n                lineType=\"joint\"\r\n                name=\"Gas\"\r\n              />\r\n            ) : (\r\n              <></>\r\n            )}\r\n            {show350 ? (\r\n              <Scatter\r\n                yAxisId=\"right\"\r\n                data={data.cutter0}\r\n                line={{ stroke: \"#82ca9d\" }}\r\n                fill=\"#82ca9d\"\r\n                lineJointType=\"monotoneX\"\r\n                lineType=\"joint\"\r\n                name=\"VLS3.50\"\r\n              />\r\n            ) : (\r\n              <></>\r\n            )}\r\n            {show460 ? (\r\n              <Scatter\r\n                yAxisId=\"right\"\r\n                data={data.cutter1}\r\n                line={{ stroke: \"#82b7ca\" }}\r\n                fill=\"#82b7ca\"\r\n                lineJointType=\"monotoneX\"\r\n                lineType=\"joint\"\r\n                name=\"VLS4.60\"\r\n              />\r\n            ) : (\r\n              <></>\r\n            )}\r\n          </ScatterChart>\r\n        </ResponsiveContainer>\r\n        <Row style={{ width: \"100%\" }}>\r\n          <Col className=\"mt20\">\r\n            <DatePicker\r\n              dateFormat=\"dd/MM/yyy\"\r\n              selectsRange={true}\r\n              startDate={startDate}\r\n              endDate={endDate}\r\n              onChange={(update) => {\r\n                setDateRange(update);\r\n              }}\r\n              withPortal\r\n              onCalendarClose={() => handleDateChange()}\r\n            />\r\n            {showPeriodError ? (\r\n              <div className=\"error-message\">Max. 7 days</div>\r\n            ) : (\r\n              <div>\r\n                <br></br>\r\n              </div>\r\n            )}\r\n          </Col>\r\n          <Col className=\"graph-tools\">\r\n            <Button variant=\"secondary\" onClick={() => setAutoY(!autoY)}>\r\n              Auto Y: {autoY ? \"on\" : \"off\"}\r\n            </Button>\r\n          </Col>\r\n          <Col className=\"graph-tools\">\r\n            <ButtonGroup>\r\n              <Button\r\n                variant={show350 ? \"secondary\" : \"outline-secondary\"}\r\n                onClick={() => setShow350(!show350)}\r\n              >\r\n                VLS3.50\r\n              </Button>\r\n              <Button\r\n                variant={show460 ? \"secondary\" : \"outline-secondary\"}\r\n                onClick={() => setShow460(!show460)}\r\n              >\r\n                VLS4.60\r\n              </Button>\r\n              <Button\r\n                variant={showGas ? \"secondary\" : \"outline-secondary\"}\r\n                onClick={() => setShowGas(!showGas)}\r\n              >\r\n                Gas\r\n              </Button>\r\n            </ButtonGroup>\r\n          </Col>\r\n          <Col className=\"graph-tools\">\r\n            <Button variant=\"secondary\" onClick={() => updateGraph()}>\r\n              Refresh data\r\n            </Button>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    </Col>\r\n  );\r\n}\r\n\r\nfunction Chart2(props) {\r\n  const [data, setData] = React.useState({});\r\n  const today = new Date().setHours(0, 0, 0, 0);\r\n\r\n  const [selectedDate, setSelectedDate] = React.useState(today);\r\n  const [autoY, setAutoY] = React.useState(false);\r\n  const dayInMilli = 24 * 60 * 60 * 1000;\r\n\r\n  const [show350, setShow350] = React.useState(true);\r\n  const [show460, setShow460] = React.useState(true);\r\n  const [showGas, setShowGas] = React.useState(true);\r\n\r\n  function handleDateChange(direction) {\r\n    const newDate = new Date(\r\n      new Date(selectedDate).getTime() + direction * dayInMilli\r\n    ).toISOString();\r\n    setSelectedDate(newDate);\r\n    updateGraph(newDate);\r\n  }\r\n\r\n  React.useEffect(() => {\r\n    updateGraph(today);\r\n  }, []);\r\n\r\n  async function updateGraph(day) {\r\n    const requestOptions = {\r\n      method: \"GET\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n    const params = {\r\n      date: new Date(day),\r\n    };\r\n    console.log(params);\r\n    fetch(`/api/getchart2data?` + new URLSearchParams(params), requestOptions)\r\n      .then((response) => {\r\n        if (response.ok) {\r\n          return response.json();\r\n        } else {\r\n          console.log(\"Error updating Chart2\");\r\n          throw new Error(response.statusText);\r\n        }\r\n      })\r\n      .then((chartData) => {\r\n        console.log(chartData);\r\n        setData(chartData);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n        setData({\r\n          gas: [\r\n            { value: 14, dt: 1503617297689 },\r\n            { value: 15, dt: 1503616962277 },\r\n            { value: 15, dt: 1503616882654 },\r\n            { value: 20, dt: 1503613184594 },\r\n            { value: 15, dt: 1503611308914 },\r\n          ],\r\n          cutter0: [\r\n            { status: 1, dt: 1503617247689 },\r\n            { status: 0, dt: 1503617248689 },\r\n            { status: 0, dt: 1503616965277 },\r\n            { status: 1, dt: 1503616966277 },\r\n            { status: 1, dt: 1503616882254 },\r\n            { status: 0, dt: 1503616883254 },\r\n            { status: 0, dt: 1503613133594 },\r\n            { status: 1, dt: 1503613134594 },\r\n            { status: 1, dt: 1503611304914 },\r\n            { status: 0, dt: 1503611305914 },\r\n          ],\r\n          cutter1: [\r\n            { status: 1, dt: 1503617247389 },\r\n            { status: 1, dt: 1503616965477 },\r\n            { status: 0, dt: 1503616882454 },\r\n            { status: 1, dt: 1503613133594 },\r\n            { status: 1, dt: 1503611305414 },\r\n          ],\r\n        });\r\n      });\r\n  }\r\n\r\n  return (\r\n    <Col xs={12}>\r\n      <div className=\"dash-card\">\r\n        <h3>Usage vs Gas: Daily</h3>\r\n        <ResponsiveContainer width=\"95%\" height={500}>\r\n          <ScatterChart>\r\n            <Legend verticalAlign=\"top\" height={50} />\r\n            <XAxis\r\n              dataKey=\"dt\"\r\n              domain={[\"auto\", \"auto\"]}\r\n              name=\"Time\"\r\n              tickFormatter={(unixTime) => new Date(unixTime).toLocaleString()}\r\n              type=\"number\"\r\n            />\r\n            <YAxis\r\n              yAxisId=\"left\"\r\n              dataKey=\"value\"\r\n              name=\"Gas\"\r\n              label={{ value: \"Gas\", angle: -90, position: \"insideLeft\" }}\r\n              domain={autoY ? [\"dataMin\", \"dataMax\"] : [0, 350]}\r\n            />\r\n            <YAxis\r\n              yAxisId=\"right\"\r\n              dataKey=\"status\"\r\n              name=\"Usage\"\r\n              orientation=\"right\"\r\n              tickFormatter={(status) => (status ? \"In use\" : \"Available\")}\r\n              tickCount={2}\r\n              label={{\r\n                value: \"Laser cutter usage\",\r\n                angle: -90,\r\n                position: \"center\",\r\n              }}\r\n            />\r\n            <Tooltip\r\n              formatter={(value) => {\r\n                if (value > 1000000) {\r\n                  return new Date(value).toLocaleString();\r\n                } else if (value == (1 || 0.99)) {\r\n                  return \"In use\";\r\n                } else if (value == 0) {\r\n                  return \"Available\";\r\n                } else {\r\n                  return value;\r\n                }\r\n              }}\r\n            />\r\n            {showGas ? (\r\n              <Scatter\r\n                yAxisId=\"left\"\r\n                data={data.gas}\r\n                line={{ stroke: \"#8884d8\" }}\r\n                fill=\"#8884d8\"\r\n                lineJointType=\"monotoneX\"\r\n                lineType=\"joint\"\r\n                name=\"Gas\"\r\n              />\r\n            ) : (\r\n              <></>\r\n            )}\r\n            {show350 ? (\r\n              <Scatter\r\n                yAxisId=\"right\"\r\n                data={data.cutter0}\r\n                line={{ stroke: \"#82ca9d\" }}\r\n                fill=\"#82ca9d\"\r\n                lineJointType=\"monotoneX\"\r\n                lineType=\"joint\"\r\n                name=\"VLS3.50\"\r\n              />\r\n            ) : (\r\n              <></>\r\n            )}\r\n            {show460 ? (\r\n              <Scatter\r\n                yAxisId=\"right\"\r\n                data={data.cutter1}\r\n                line={{ stroke: \"#82b7ca\" }}\r\n                fill=\"#82b7ca\"\r\n                lineJointType=\"monotoneX\"\r\n                lineType=\"joint\"\r\n                name=\"VLS4.60\"\r\n              />\r\n            ) : (\r\n              <></>\r\n            )}\r\n          </ScatterChart>\r\n        </ResponsiveContainer>\r\n        <Row style={{ width: \"100%\" }}>\r\n          <Col className=\"graph-tools\">\r\n            <Button variant=\"secondary\" onClick={() => handleDateChange(-1)}>\r\n              Prev.\r\n            </Button>\r\n            <div className=\"selected-day\">\r\n              {new Date(selectedDate).toLocaleDateString()}\r\n            </div>\r\n            <Button variant=\"secondary\" onClick={() => handleDateChange(1)}>\r\n              Next\r\n            </Button>\r\n          </Col>\r\n          <Col className=\"graph-tools\">\r\n            <Button variant=\"secondary\" onClick={() => setAutoY(!autoY)}>\r\n              Auto Y: {autoY ? \"on\" : \"off\"}\r\n            </Button>\r\n          </Col>\r\n          <Col className=\"graph-tools\">\r\n            <ButtonGroup>\r\n              <Button\r\n                variant={show350 ? \"secondary\" : \"outline-secondary\"}\r\n                onClick={() => setShow350(!show350)}\r\n              >\r\n                VLS3.50\r\n              </Button>\r\n              <Button\r\n                variant={show460 ? \"secondary\" : \"outline-secondary\"}\r\n                onClick={() => setShow460(!show460)}\r\n              >\r\n                VLS4.60\r\n              </Button>\r\n              <Button\r\n                variant={showGas ? \"secondary\" : \"outline-secondary\"}\r\n                onClick={() => setShowGas(!showGas)}\r\n              >\r\n                Gas\r\n              </Button>\r\n            </ButtonGroup>\r\n          </Col>\r\n          <Col className=\"graph-tools\">\r\n            <Button\r\n              variant=\"secondary\"\r\n              onClick={() => updateGraph(selectedDate)}\r\n            >\r\n              Refresh data\r\n            </Button>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    </Col>\r\n  );\r\n}\r\n\r\nexport { Chart1, Chart2 };\r\n","import React from \"react\";\r\n\r\nimport {\r\n  CartesianGrid,\r\n  Legend,\r\n  ResponsiveContainer,\r\n  Brush,\r\n  Scatter,\r\n  ScatterChart,\r\n  Tooltip,\r\n  XAxis,\r\n  YAxis,\r\n} from \"recharts\";\r\n\r\nimport \"../index.css\";\r\n\r\nimport {\r\n  Navbar,\r\n  Container,\r\n  Nav,\r\n  Column,\r\n  Row,\r\n  Col,\r\n  Image,\r\n  Overlay,\r\n  Tooltip as BSTooltip,\r\n  Alert,\r\n} from \"react-bootstrap\";\r\n\r\nimport { Chart1, Chart2 } from \"../components/Charts\";\r\n\r\nfunction Dashboard(props) {\r\n  const [deviceList, setDeviceList] = React.useState([]);\r\n  const [workshopStats, setWorkshopStats] = React.useState({});\r\n\r\n  function updateWorkshopStats() {\r\n    const requestOptions = {\r\n      method: \"GET\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n    fetch(\"/api/getworkshopstats\", requestOptions)\r\n      .then((response) => {\r\n        if (response.ok) {\r\n          return response.json();\r\n        } else {\r\n          console.log(\"Error retrieving workshop stats\");\r\n          throw new Error(response.statusText);\r\n        }\r\n      })\r\n      .then((workshopStats) => {\r\n        console.log(workshopStats);\r\n        setWorkshopStats(workshopStats);\r\n      })\r\n      .catch((error) => {\r\n        setWorkshopStats({\r\n          lastHourAverage: \"27.79\",\r\n          lastGasReadingValue: 26,\r\n          lastGasReadingDt: \"2021-12-16T18:46:30Z\",\r\n          usersToday: 1,\r\n          timeUsed: 770590,\r\n          morningThreshold: \"31.11\",\r\n          isDangerous: 0,\r\n          isAboveMorning: 0,\r\n        });\r\n        console.log(error.message);\r\n      });\r\n  }\r\n\r\n  function updateDeviceList() {\r\n    const requestOptions = {\r\n      method: \"GET\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n    fetch(\"/api/getdevicestatuses\", requestOptions)\r\n      .then((response) => {\r\n        if (response.ok) {\r\n          return response.json();\r\n        } else {\r\n          console.log(\"Error retrieving devices\");\r\n          throw new Error(response.statusText);\r\n        }\r\n      })\r\n      .then((devices) => {\r\n        console.log(devices);\r\n        setDeviceList(devices);\r\n      })\r\n      .catch((error) => {\r\n        setDeviceList([\r\n          {\r\n            index: 0,\r\n            name: \"abc3.50\",\r\n            nickname: \"Left Laser Cutter\",\r\n            status: 1,\r\n          },\r\n          {\r\n            index: 1,\r\n            name: \"def4.60\",\r\n            nickname: \"Right Laser Cutter\",\r\n            status: 0,\r\n          },\r\n        ]);\r\n        console.log(error.message);\r\n      });\r\n  }\r\n\r\n  React.useEffect(() => {\r\n    updateDeviceList();\r\n    updateWorkshopStats();\r\n    const interval = setInterval(() => {\r\n      updateDeviceList();\r\n      updateWorkshopStats();\r\n      console.log(\"refreshing devices and stats\");\r\n    }, 15000);\r\n\r\n    return () => clearInterval(interval);\r\n  }, []);\r\n\r\n  return (\r\n    <div id=\"home\">\r\n      <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\" fixed=\"top\">\r\n        <Container>\r\n          <Navbar.Brand href=\"\">AceX Workshop</Navbar.Brand>\r\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n          <Navbar.Collapse id=\"basic-navbar-nav\">\r\n            <Nav className=\"me-auto\">\r\n              <Nav.Link href=\"#home\">Status</Nav.Link>\r\n              <Nav.Link href=\"#data\">Data</Nav.Link>\r\n            </Nav>\r\n          </Navbar.Collapse>\r\n        </Container>\r\n      </Navbar>\r\n      <Container>\r\n        <h1 className=\"mt75\">Status</h1>\r\n        <Row className=\"justify-content-md-left mt30\">\r\n          {deviceList.map((device, i) => {\r\n            return (\r\n              <Col xs={12} md={6}>\r\n                <div className=\"dash-card\">\r\n                  <Image\r\n                    className=\"laser-icon\"\r\n                    fluid\r\n                    src=\"./laser-cutter-icon.png\"\r\n                    alt=\" \"\r\n                  />\r\n                  <h3>{device.name}</h3>\r\n                  <h3>\r\n                    Status:{\" \"}\r\n                    {device.status ? (\r\n                      <b className=\"in-use-text\">in use</b>\r\n                    ) : (\r\n                      <b className=\"available-text\">available</b>\r\n                    )}\r\n                  </h3>\r\n                </div>\r\n              </Col>\r\n            );\r\n          })}\r\n        </Row>\r\n      </Container>\r\n      <Container id=\"data\">\r\n        <h1>Data</h1>\r\n        <Row className=\"justify-content-md-left mt30\">\r\n          <Col xs={12} md={4}>\r\n            <div className=\"stats-card\">\r\n              <Image\r\n                className=\"stats-icon\"\r\n                fluid\r\n                src=\"./user-icon.png\"\r\n                alt=\" \"\r\n              />\r\n              <h3>No. users today: {workshopStats.usersToday}</h3>\r\n              <h3>\r\n                Hours in use today:{\" \"}\r\n                {(workshopStats.timeUsed / (1000 * 60 * 60)).toFixed(0)}h\r\n                {(workshopStats.timeUsed / (1000 * 60)).toFixed(0)}m\r\n              </h3>\r\n            </div>\r\n          </Col>\r\n          <Col xs={12} md={4}>\r\n            <div className=\"stats-card\">\r\n              <Image\r\n                className=\"stats-icon\"\r\n                fluid\r\n                src=\"./gas-icon.png\"\r\n                alt=\" \"\r\n              />\r\n              <h3>\r\n                Last Reading (\r\n                {new Date(workshopStats.lastGasReadingDt).toLocaleTimeString(\r\n                  [],\r\n                  { hour: \"2-digit\", minute: \"2-digit\", second: \"2-digit\" }\r\n                )}\r\n                ): {workshopStats.lastGasReadingValue}\r\n              </h3>\r\n              <h3>Last hour avg.: {workshopStats.lastHourAverage}</h3>\r\n            </div>\r\n          </Col>\r\n          <Col xs={12} md={4}>\r\n            <div className=\"stats-card\">\r\n              <Image\r\n                className=\"stats-icon\"\r\n                fluid\r\n                src=\"./warning-icon.png\"\r\n                alt=\" \"\r\n              />\r\n              <h3>Start of day threshold: {workshopStats.morningThreshold}</h3>\r\n              <h3>\r\n                Relative gas level:{\" \"}\r\n                {workshopStats.isDangerous ? (\r\n                  <b className=\"error-message\">HIGH</b>\r\n                ) : (\r\n                  <b className=\"success-message\">\r\n                    {workshopStats.isAboveMorning ? \"NORMAL\" : \"LOW\"}\r\n                  </b>\r\n                )}\r\n              </h3>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n        <Row className=\"justify-content-md-left mt30\">\r\n          <Chart2 />\r\n        </Row>\r\n        <Row className=\"justify-content-md-left mt30\">\r\n          <Chart1 />\r\n        </Row>\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Dashboard;\r\n","import React from \"react\";\r\nimport { useCookies } from \"react-cookie\";\r\n\r\nimport \"../index.css\";\r\nimport {\r\n  Navbar,\r\n  Container,\r\n  Nav,\r\n  Column,\r\n  Row,\r\n  Col,\r\n  Modal,\r\n  Button,\r\n  Form,\r\n  Spinner,\r\n} from \"react-bootstrap\";\r\n\r\n// function templateModal(props) {\r\n//   const [readOnly, setReadOnly] = React.useState(false);\r\n//   const [loadingSpinner, setLoadingSpinner] = React.useState(false);\r\n\r\n//   const oldPassword = React.useRef();\r\n\r\n//   const handleKeyPress = (event) => {\r\n//       if (event.key === \"Enter\") {\r\n//         onSubmit();\r\n//       }\r\n//   };\r\n\r\n//   function onSubmit() {\r\n//     setReadOnly(true)\r\n//   }\r\n\r\n//   return (\r\n//     <Modal\r\n//       {...props}\r\n//       size=\"lg\"\r\n//       aria-labelledby=\"contained-modal-title-vcenter\"\r\n//       centered\r\n//     >\r\n//       <Modal.Header closeButton>\r\n//         <Modal.Title id=\"contained-modal-title-vcenter\">Add User</Modal.Title>\r\n//       </Modal.Header>\r\n//       <Modal.Body>\r\n//         <Form.Group className=\"mb-3\">\r\n//           <Form.Label>Short code</Form.Label>\r\n//           <Form.Control\r\n//             type=\"text\"\r\n//             placeholder=\"e.g. ab1234\"\r\n//             readOnly={readOnly ? true : false}\r\n//           />\r\n//         </Form.Group>\r\n//       </Modal.Body>\r\n//       <Modal.Footer>\r\n//         <Button variant=\"primary\" type=\"submit\">\r\n//           Change Password\r\n//         </Button>\r\n//         <Button variant=\"secondary\" onClick={props.onHide}>\r\n//           Cancel\r\n//         </Button>\r\n//       </Modal.Footer>\r\n//     </Modal>\r\n//   );\r\n// }\r\n\r\n//function CheckUserModal\r\n\r\nfunction DeleteUserModal(props) {\r\n  const [readOnly, setReadOnly] = React.useState(false);\r\n  const [cardID, setCardID] = React.useState(\"\");\r\n  const [scannerEnabled, setScannerEnabled] = React.useState(false);\r\n  const [loadingSpinner, setLoadingSpinner] = React.useState(false);\r\n  const [showSuccessMessage, setShowSuccessMessage] = React.useState(false);\r\n  const [showErrorMessage, setShowErrorMessage] = React.useState(false);\r\n  const [shortCodeInvalid, setShortCodeInvalid] = React.useState(false);\r\n  const [cardIDInvalid, setCardIDInvalid] = React.useState(false);\r\n  const [fieldErrorMsg, setFieldErrorMsg] = React.useState(\"\");\r\n\r\n  const cardIdInput = React.useRef();\r\n  const shortCode = React.useRef();\r\n\r\n  const handleKeyPress = (event) => {\r\n    resetModal();\r\n    if (event.key === \"Enter\") {\r\n      if (scannerEnabled) {\r\n        //if enter key prevent default\r\n        event.preventDefault();\r\n        console.log(cardIdInput.current.value);\r\n        if (cardIdInput.current.value.length === 10) {\r\n          //if input data length 10, run finduser\r\n          console.log(\"here\");\r\n          const currCardId = cardIdInput.current.value;\r\n          setCardID(currCardId);\r\n        }\r\n      } else {\r\n        onSubmit();\r\n        readOnly(true);\r\n      }\r\n    }\r\n  };\r\n\r\n  function resetModal() {\r\n    setShowSuccessMessage(false);\r\n    setShowErrorMessage(false);\r\n    setShortCodeInvalid(false);\r\n    setCardIDInvalid(false);\r\n    setReadOnly(false);\r\n  }\r\n\r\n  function onSubmit() {\r\n    const shortC = shortCode.current.value;\r\n    const card = cardIdInput.current.value;\r\n    if (!shortC && !card) {\r\n      setFieldErrorMsg(\"Please enter valid user details\");\r\n      setShortCodeInvalid(true);\r\n      setCardIDInvalid(true);\r\n    } else {\r\n      setReadOnly(true);\r\n      const requestOptions = {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: `Bearer ${sessionStorage.getItem(\"token\")}`,\r\n        },\r\n      };\r\n      if (card) {\r\n        requestOptions.body = JSON.stringify({\r\n          card_id: card,\r\n        });\r\n      } else if (shortC) {\r\n        requestOptions.body = JSON.stringify({\r\n          short_code: shortC,\r\n        });\r\n      }\r\n      fetch(\"/api/delUser\", requestOptions)\r\n        .then((response) => {\r\n          if (response.ok) {\r\n            setLoadingSpinner(false);\r\n            setShowSuccessMessage(true);\r\n            setTimeout(() => {\r\n              props.onHide();\r\n              resetModal();\r\n              setCardID(\"\");\r\n            }, 2000);\r\n          } else if (response.status === 403) {\r\n            console.log(\"Auth token bad\");\r\n            resetModal();\r\n            setCardID(\"\");\r\n            props.kick();\r\n            throw new Error(response.statusText);\r\n          } else if (response.status === 404) {\r\n            console.log(\"User not found\");\r\n            setFieldErrorMsg(\"User not found, try again\");\r\n            setCardID(\"\");\r\n            if (card) {\r\n              setCardIDInvalid(true);\r\n            } else if (shortC) {\r\n              setShortCodeInvalid(true);\r\n            }\r\n            throw new Error(response.statusText);\r\n          } else {\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n          setReadOnly(false);\r\n          setLoadingSpinner(false);\r\n          setShowErrorMessage(true);\r\n        });\r\n    }\r\n  }\r\n\r\n  React.useEffect(() => {\r\n    if (scannerEnabled) {\r\n      cardIdInput.current.value = \"\";\r\n      cardIdInput.current.focus();\r\n      setShowSuccessMessage(false);\r\n      setShowErrorMessage(false);\r\n      setShortCodeInvalid(false);\r\n      setCardIDInvalid(false);\r\n      setCardID(\"\");\r\n    }\r\n  }, [scannerEnabled]);\r\n\r\n  return (\r\n    <Modal\r\n      {...props}\r\n      size=\"lg\"\r\n      aria-labelledby=\"contained-modal-title-vcenter\"\r\n      centered\r\n    >\r\n      <input\r\n        className=\"scanner-input\"\r\n        ref={cardIdInput}\r\n        onKeyPress={handleKeyPress}\r\n        onBlur={() => setScannerEnabled(false)}\r\n      />\r\n      <Modal.Header closeButton>\r\n        <Modal.Title id=\"contained-modal-title-vcenter\">\r\n          Delete User\r\n        </Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        <Form.Group className=\"mb-3\">\r\n          <Form.Label>Short code</Form.Label>\r\n          <Form.Control\r\n            type=\"text\"\r\n            placeholder=\"e.g. ab1234\"\r\n            readOnly={readOnly ? true : false}\r\n            onKeyPress={handleKeyPress}\r\n            ref={shortCode}\r\n            isInvalid={shortCodeInvalid}\r\n          />\r\n          <Form.Control.Feedback type=\"invalid\">\r\n            {fieldErrorMsg}\r\n          </Form.Control.Feedback>\r\n        </Form.Group>\r\n        <h5 className=\"mb20\">OR</h5>\r\n        <Form.Group className=\"mb-3\">\r\n          <Form.Label>Card ID</Form.Label>\r\n          <Row>\r\n            <Col xs=\"auto\">\r\n              <Button\r\n                className=\"scanner-button\"\r\n                onClick={() => setScannerEnabled(true)}\r\n                variant=\"primary\"\r\n                disabled={scannerEnabled || readOnly ? true : false}\r\n              >\r\n                {scannerEnabled ? \"Scan card\" : \"Enable Scanner\"}\r\n              </Button>\r\n            </Col>\r\n            <Col>\r\n              <Form.Control\r\n                type=\"password\"\r\n                placeholder=\"\"\r\n                value={cardID}\r\n                readOnly\r\n                isInvalid={cardIDInvalid}\r\n              />\r\n              <Form.Control.Feedback type=\"invalid\">\r\n                {fieldErrorMsg}\r\n              </Form.Control.Feedback>\r\n            </Col>\r\n          </Row>\r\n        </Form.Group>\r\n      </Modal.Body>\r\n      <AdminModalFooter\r\n        loadingSpinner={loadingSpinner}\r\n        showErrorMessage={showErrorMessage}\r\n        showSuccessMessage={showSuccessMessage}\r\n        readOnly={readOnly}\r\n        onSubmit={onSubmit}\r\n        onHide={props.onHide}\r\n        cancel={\"Cancel\"}\r\n        actionButton={\"Delete User\"}\r\n        actionButtonRed={true}\r\n      />\r\n    </Modal>\r\n  );\r\n}\r\n\r\nfunction ChangePasswordModal(props) {\r\n  const [readOnly, setReadOnly] = React.useState(false);\r\n  const [loadingSpinner, setLoadingSpinner] = React.useState(false);\r\n  const [passwordError, setPasswordError] = React.useState(false);\r\n  const [showSuccessMessage, setShowSuccessMessage] = React.useState(false);\r\n  const [showErrorMessage, setShowErrorMessage] = React.useState(false);\r\n\r\n  const oldPassword = React.useRef();\r\n  const newPassword = React.useRef();\r\n\r\n  const handleKeyPress = (event) => {\r\n    resetModal();\r\n    if (event.key === \"Enter\") {\r\n      onSubmit();\r\n    }\r\n  };\r\n\r\n  function resetModal() {\r\n    setShowSuccessMessage(false);\r\n    setShowErrorMessage(false);\r\n    setPasswordError(false);\r\n  }\r\n\r\n  function onSubmit() {\r\n    setReadOnly(true);\r\n    const oldPass = oldPassword.current.value;\r\n    const newPass = newPassword.current.value;\r\n    const requestOptions = {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${sessionStorage.getItem(\"token\")}`,\r\n      },\r\n      body: JSON.stringify({ old_password: oldPass, new_password: newPass }),\r\n    };\r\n    fetch(\"/api/changepass\", requestOptions)\r\n      .then((response) => {\r\n        if (response.ok) {\r\n          setLoadingSpinner(false);\r\n          setShowSuccessMessage(true);\r\n          setTimeout(() => {\r\n            props.onHide();\r\n            setReadOnly(false);\r\n            setShowSuccessMessage(false);\r\n          }, 2000);\r\n        } else if (response.status === 401) {\r\n          console.log(\"Incorrect old password\");\r\n          setPasswordError(true);\r\n          throw new Error(response.statusText);\r\n        } else if (response.status === 403) {\r\n          console.log(\"Auth token bad\");\r\n          props.kick();\r\n          throw new Error(response.statusText);\r\n        } else {\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n        setReadOnly(false);\r\n        setLoadingSpinner(false);\r\n        setShowErrorMessage(true);\r\n      });\r\n  }\r\n\r\n  return (\r\n    <Modal\r\n      {...props}\r\n      size=\"lg\"\r\n      aria-labelledby=\"contained-modal-title-vcenter\"\r\n      centered\r\n    >\r\n      <Modal.Header closeButton>\r\n        <Modal.Title id=\"contained-modal-title-vcenter\">\r\n          Change Admin Password\r\n        </Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        <Form>\r\n          <Form.Group className=\"mb-3\">\r\n            <Form.Label>Old password</Form.Label>\r\n            <Form.Control\r\n              type=\"password\"\r\n              placeholder=\"\"\r\n              readOnly={readOnly ? true : false}\r\n              ref={oldPassword}\r\n              isInvalid={passwordError}\r\n              isValid={showSuccessMessage}\r\n              onKeyPress={handleKeyPress}\r\n            />\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              Incorrect old password, try again\r\n            </Form.Control.Feedback>\r\n          </Form.Group>\r\n          <Form.Group className=\"mb-3\">\r\n            <Form.Label>New password</Form.Label>\r\n            <Form.Control\r\n              type=\"password\"\r\n              placeholder=\"\"\r\n              readOnly={readOnly ? true : false}\r\n              ref={newPassword}\r\n              onKeyPress={handleKeyPress}\r\n              isValid={showSuccessMessage}\r\n            />\r\n          </Form.Group>\r\n        </Form>\r\n      </Modal.Body>\r\n      <AdminModalFooter\r\n        loadingSpinner={loadingSpinner}\r\n        showErrorMessage={showErrorMessage}\r\n        showSuccessMessage={showSuccessMessage}\r\n        readOnly={readOnly}\r\n        onSubmit={onSubmit}\r\n        onHide={props.onHide}\r\n        cancel={\"Cancel\"}\r\n        actionButton={\"Change Password\"}\r\n      />\r\n    </Modal>\r\n  );\r\n}\r\n\r\n// function CheckUserModal(props) {\r\n//   const [readOnly, setReadOnly] = React.useState(false);\r\n//   const [cardID, setCardID] = React.useState(\"\");\r\n//   const [scannerEnabled, setScannerEnabled] = React.useState(false);\r\n//   const [loadingSpinner, setLoadingSpinner] = React.useState(false);\r\n//   const [showSuccessMessage, setShowSuccessMessage] = React.useState(false);\r\n//   const [showErrorMessage, setShowErrorMessage] = React.useState(false);\r\n//   const [cardIDInvalid, setCardIDInvalid] = React.useState(false);\r\n//   const [cardIDInvalid, setCardIDInvalid] = React.useState(false);\r\n\r\n//   const cardIdInput = React.useRef();\r\n\r\n//   const handleKeyPress = (event) => {\r\n//     resetModal();\r\n//     if (event.key === \"Enter\") {\r\n//       if (scannerEnabled) {\r\n//         //if enter key prevent default\r\n//         event.preventDefault();\r\n//         console.log(cardIdInput.current.value);\r\n//         if (cardIdInput.current.value.length === 10) {\r\n//           //if input data length 10, run finduser\r\n//           console.log(\"here\");\r\n//           const currCardId = cardIdInput.current.value;\r\n//           setCardID(currCardId);\r\n//         }\r\n//       } else {\r\n//         onSubmit();\r\n//         readOnly(true);\r\n//       }\r\n//     }\r\n//   };\r\n\r\n//   function resetModal() {\r\n//     setShowSuccessMessage(false);\r\n//     setShowErrorMessage(false);\r\n//     setCardIDInvalid(false);\r\n//   }\r\n\r\n//   function onSubmit() {\r\n//     const card = cardIdInput.current.value;\r\n//     if (!card) {\r\n//       setCardIDInvalid(true);\r\n//     } else {\r\n//       setReadOnly(true);\r\n//       const requestOptions = {\r\n//         method: \"POST\",\r\n//         headers: {\r\n//           \"Content-Type\": \"application/json\",\r\n//           Authorization: `Bearer ${sessionStorage.getItem(\"token\")}`,\r\n//         },\r\n//         body: JSON.stringify({ card_id: card }),\r\n//       };\r\n//       fetch(\"/api/checkUser\", requestOptions)\r\n//         .then((response) => {\r\n//           if (response.ok) {\r\n//             setLoadingSpinner(false);\r\n//             setShowSuccessMessage(true);\r\n\r\n//           } else if (response.status === 403) {\r\n//             console.log(\"Auth token bad\");\r\n//             props.kick();\r\n//             throw new Error(response.statusText);\r\n//           } else {\r\n//           }\r\n//         })\r\n//         .catch((error) => {\r\n//           console.log(error);\r\n//           setReadOnly(false);\r\n//           setLoadingSpinner(false);\r\n//           setShowErrorMessage(true);\r\n//         });\r\n//     }\r\n//   }\r\n\r\n//   React.useEffect(() => {\r\n//     if (scannerEnabled) {\r\n//       cardIdInput.current.value = \"\";\r\n//       cardIdInput.current.focus();\r\n//     }\r\n//   }, [scannerEnabled]);\r\n\r\n//   return (\r\n//     <Modal\r\n//       {...props}\r\n//       size=\"lg\"\r\n//       aria-labelledby=\"contained-modal-title-vcenter\"\r\n//       centered\r\n//     >\r\n//       <input\r\n//         className=\"scanner-input\"\r\n//         ref={cardIdInput}\r\n//         onKeyPress={handleKeyPress}\r\n//         onBlur={() => setScannerEnabled(false)}\r\n//       />\r\n//       <Modal.Header closeButton>\r\n//         <Modal.Title id=\"contained-modal-title-vcenter\">Add User</Modal.Title>\r\n//       </Modal.Header>\r\n//       <Modal.Body>\r\n//         <Form.Group className=\"mb-3\">\r\n//           <Form.Label>Short code</Form.Label>\r\n//           <Form.Control\r\n//             type=\"text\"\r\n//             placeholder=\"e.g. ab1234\"\r\n//             readOnly={readOnly ? true : false}\r\n//             onKeyPress={handleKeyPress}\r\n//             ref={shortCode}\r\n//             isInvalid={shortCodeInvalid}\r\n//           />\r\n//           <Form.Control.Feedback type=\"invalid\">\r\n//             Please enter a short code.\r\n//           </Form.Control.Feedback>\r\n//         </Form.Group>\r\n//         <Form.Group className=\"mb-3\">\r\n//           <Form.Label>Card ID</Form.Label>\r\n//           <Row>\r\n//             <Col xs=\"auto\">\r\n//               <Button\r\n//                 className=\"scanner-button\"\r\n//                 onClick={() => setScannerEnabled(true)}\r\n//                 variant=\"primary\"\r\n//                 disabled={scannerEnabled || readOnly ? true : false}\r\n//               >\r\n//                 {scannerEnabled ? \"Scan card\" : \"Enable Scanner\"}\r\n//               </Button>\r\n//             </Col>\r\n//             <Col>\r\n//               <Form.Control\r\n//                 type=\"password\"\r\n//                 placeholder=\"\"\r\n//                 value={cardID}\r\n//                 readOnly\r\n//                 isInvalid={cardIDInvalid}\r\n//               />\r\n//               <Form.Control.Feedback type=\"invalid\">\r\n//                 Please add a card ID.\r\n//               </Form.Control.Feedback>\r\n//             </Col>\r\n//           </Row>\r\n//         </Form.Group>\r\n//       </Modal.Body>\r\n//       <AdminModalFooter\r\n//         loadingSpinner={loadingSpinner}\r\n//         showErrorMessage={showErrorMessage}\r\n//         showSuccessMessage={showSuccessMessage}\r\n//         readOnly={readOnly}\r\n//         onSubmit={onSubmit}\r\n//         onHide={props.onHide}\r\n//         cancel={\"Cancel\"}\r\n//         actionButton={\"Add User\"}\r\n//       />\r\n//     </Modal>\r\n//   );\r\n// }\r\n\r\nfunction AddUserModal(props) {\r\n  const [readOnly, setReadOnly] = React.useState(false);\r\n  const [cardID, setCardID] = React.useState(\"\");\r\n  const [scannerEnabled, setScannerEnabled] = React.useState(false);\r\n  const [loadingSpinner, setLoadingSpinner] = React.useState(false);\r\n  const [showSuccessMessage, setShowSuccessMessage] = React.useState(false);\r\n  const [showErrorMessage, setShowErrorMessage] = React.useState(false);\r\n  const [shortCodeInvalid, setShortCodeInvalid] = React.useState(false);\r\n  const [cardIDInvalid, setCardIDInvalid] = React.useState(false);\r\n\r\n  const cardIdInput = React.useRef();\r\n  const shortCode = React.useRef();\r\n\r\n  const handleKeyPress = (event) => {\r\n    resetModal();\r\n    if (event.key === \"Enter\") {\r\n      if (scannerEnabled) {\r\n        //if enter key prevent default\r\n        event.preventDefault();\r\n        console.log(cardIdInput.current.value);\r\n        if (cardIdInput.current.value.length === 10) {\r\n          //if input data length 10, run finduser\r\n          console.log(\"here\");\r\n          const currCardId = cardIdInput.current.value;\r\n          setCardID(currCardId);\r\n        }\r\n      } else {\r\n        onSubmit();\r\n        readOnly(true);\r\n      }\r\n    }\r\n  };\r\n\r\n  function resetModal() {\r\n    setShowSuccessMessage(false);\r\n    setShowErrorMessage(false);\r\n    setShortCodeInvalid(false);\r\n    setCardIDInvalid(false);\r\n    setReadOnly(false);\r\n  }\r\n\r\n  function onSubmit() {\r\n    const shortC = shortCode.current.value;\r\n    const card = cardIdInput.current.value;\r\n    if (!shortC) {\r\n      setShortCodeInvalid(true);\r\n    } else if (!card) {\r\n      setCardIDInvalid(true);\r\n    } else {\r\n      setReadOnly(true);\r\n      const requestOptions = {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: `Bearer ${sessionStorage.getItem(\"token\")}`,\r\n        },\r\n        body: JSON.stringify({ short_code: shortC, card_id: card }),\r\n      };\r\n      fetch(\"/api/addUser\", requestOptions)\r\n        .then((response) => {\r\n          if (response.ok) {\r\n            setLoadingSpinner(false);\r\n            setShowSuccessMessage(true);\r\n            setTimeout(() => {\r\n              props.onHide();\r\n              setCardID(\"\");\r\n              resetModal();\r\n            }, 2000);\r\n          } else if (response.status === 403) {\r\n            console.log(\"Auth token bad\");\r\n            props.kick();\r\n            throw new Error(response.statusText);\r\n          } else {\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n          setReadOnly(false);\r\n          setLoadingSpinner(false);\r\n          setShowErrorMessage(true);\r\n        });\r\n    }\r\n  }\r\n\r\n  React.useEffect(() => {\r\n    if (scannerEnabled) {\r\n      cardIdInput.current.value = \"\";\r\n      cardIdInput.current.focus();\r\n      resetModal();\r\n      setCardID(\"\");\r\n    }\r\n  }, [scannerEnabled]);\r\n\r\n  return (\r\n    <Modal\r\n      {...props}\r\n      size=\"lg\"\r\n      aria-labelledby=\"contained-modal-title-vcenter\"\r\n      centered\r\n    >\r\n      <input\r\n        className=\"scanner-input\"\r\n        ref={cardIdInput}\r\n        onKeyPress={handleKeyPress}\r\n        onBlur={() => setScannerEnabled(false)}\r\n      />\r\n      <Modal.Header closeButton>\r\n        <Modal.Title id=\"contained-modal-title-vcenter\">Add User</Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        <Form.Group className=\"mb-3\">\r\n          <Form.Label>Short code</Form.Label>\r\n          <Form.Control\r\n            type=\"text\"\r\n            placeholder=\"e.g. ab1234\"\r\n            readOnly={readOnly ? true : false}\r\n            onKeyPress={handleKeyPress}\r\n            ref={shortCode}\r\n            isInvalid={shortCodeInvalid}\r\n          />\r\n          <Form.Control.Feedback type=\"invalid\">\r\n            Please enter a short code.\r\n          </Form.Control.Feedback>\r\n        </Form.Group>\r\n        <Form.Group className=\"mb-3\">\r\n          <Form.Label>Card ID</Form.Label>\r\n          <Row>\r\n            <Col xs=\"auto\">\r\n              <Button\r\n                className=\"scanner-button\"\r\n                onClick={() => setScannerEnabled(true)}\r\n                variant=\"primary\"\r\n                disabled={scannerEnabled || readOnly ? true : false}\r\n              >\r\n                {scannerEnabled ? \"Scan card\" : \"Enable Scanner\"}\r\n              </Button>\r\n            </Col>\r\n            <Col>\r\n              <Form.Control\r\n                type=\"password\"\r\n                placeholder=\"\"\r\n                value={cardID}\r\n                readOnly\r\n                isInvalid={cardIDInvalid}\r\n              />\r\n              <Form.Control.Feedback type=\"invalid\">\r\n                Please add a card ID.\r\n              </Form.Control.Feedback>\r\n            </Col>\r\n          </Row>\r\n        </Form.Group>\r\n      </Modal.Body>\r\n      <AdminModalFooter\r\n        loadingSpinner={loadingSpinner}\r\n        showErrorMessage={showErrorMessage}\r\n        showSuccessMessage={showSuccessMessage}\r\n        readOnly={readOnly}\r\n        onSubmit={onSubmit}\r\n        onHide={props.onHide}\r\n        cancel={\"Cancel\"}\r\n        actionButton={\"Add User\"}\r\n      />\r\n    </Modal>\r\n  );\r\n}\r\n\r\nfunction AdminModalFooter(props) {\r\n  return (\r\n    <Modal.Footer>\r\n      {props.loadingSpinner ? (\r\n        <Col xs=\"auto\">\r\n          <Spinner className=\"mra\" animation=\"border\" />\r\n        </Col>\r\n      ) : (\r\n        <></>\r\n      )}\r\n      {props.showSuccessMessage ? (\r\n        <Col xs=\"auto\">\r\n          <div className=\"mra success-message\">Success</div>\r\n        </Col>\r\n      ) : (\r\n        <></>\r\n      )}\r\n      {props.showErrorMessage ? (\r\n        <Col xs=\"auto\">\r\n          <div className=\"mra error-message\">Error</div>\r\n        </Col>\r\n      ) : (\r\n        <></>\r\n      )}\r\n      <Button variant=\"secondary\" onClick={props.onHide} className=\"mla\">\r\n        {props.cancel}\r\n      </Button>\r\n      <Button\r\n        variant={props.actionButtonRed ? \"danger\" : \"primary\"}\r\n        type=\"submit\"\r\n        onClick={() => props.onSubmit()}\r\n        disabled={props.readOnly ? true : false}\r\n      >\r\n        {props.actionButton}\r\n      </Button>\r\n    </Modal.Footer>\r\n  );\r\n}\r\n\r\nfunction Admin(props) {\r\n  const [addUserModalShow, setAddUserModalShow] = React.useState(false);\r\n  const [delUserModalShow, setDelUserModalShow] = React.useState(false);\r\n  const [changePassModalShow, setChangePassModalShow] = React.useState(false);\r\n  // const [checkUserModalShow, setCheckUserModalShow] = React.useState(false);\r\n  const [loggedIn, setLoggedIn] = React.useState(false);\r\n  const [loginReadOnly, setLoginReadOnly] = React.useState(false);\r\n  const [passwordError, setPasswordError] = React.useState(false);\r\n  const [passwordErrorMessage, setPasswordErrorMessage] = React.useState(\"\");\r\n  const [showPasswordSpinner, setShowPasswordSpinner] = React.useState(false);\r\n  const [showKickedMessage, setShowKickedMessage] = React.useState(false);\r\n\r\n  const loginPassword = React.useRef();\r\n\r\n  function onLoginButton() {\r\n    const password = loginPassword.current.value;\r\n    setShowPasswordSpinner(true);\r\n    setLoginReadOnly(true);\r\n    const requestOptions = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ password: password }),\r\n    };\r\n    fetch(\"/api/login\", requestOptions)\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        setShowPasswordSpinner(false);\r\n        sessionStorage.setItem(\"token\", data.token);\r\n        setLoginReadOnly(false);\r\n        setLoggedIn(true);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n        setShowPasswordSpinner(false);\r\n        setLoginReadOnly(false);\r\n        setPasswordError(true);\r\n        setPasswordErrorMessage(\"Incorrect password, try again\");\r\n      });\r\n  }\r\n\r\n  function onLogoutButton() {\r\n    sessionStorage.removeItem(\"token\");\r\n    setLoggedIn(false);\r\n  }\r\n\r\n  function onKickedOut() {\r\n    sessionStorage.removeItem(\"token\");\r\n    setLoggedIn(false);\r\n    setShowKickedMessage(true);\r\n  }\r\n\r\n  function handleLoginEnter(event) {\r\n    setPasswordError(false);\r\n    if (event.key === \"Enter\") {\r\n      onLoginButton();\r\n    }\r\n  }\r\n\r\n  React.useEffect(() => {\r\n    if (sessionStorage.getItem(\"token\")) {\r\n      setLoggedIn(true);\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <Navbar bg=\"light\">\r\n        <Container>\r\n          <Navbar.Brand href=\"\">AceX Admin</Navbar.Brand>\r\n          {loggedIn ? (\r\n            <Nav.Link onClick={() => onLogoutButton()}>Logout</Nav.Link>\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </Container>\r\n      </Navbar>\r\n      {loggedIn ? (\r\n        <Container>\r\n          <h1>Welcome</h1>\r\n          <Row className=\"justify-content-md-left mt50\">\r\n            <Col xs={6} md={4} xl={3}>\r\n              <div\r\n                onClick={() => setAddUserModalShow(true)}\r\n                className=\"admin-card\"\r\n              >\r\n                <h2 className=\"mta\">Add user</h2>\r\n              </div>\r\n            </Col>\r\n            <Col xs={6} md={4} xl={3}>\r\n              <div\r\n                onClick={() => setDelUserModalShow(true)}\r\n                className=\"admin-card\"\r\n              >\r\n                <h2 className=\"mta\">Delete user</h2>\r\n              </div>\r\n            </Col>\r\n            <Col xs={6} md={4} xl={3}>\r\n              <div\r\n                onClick={() => setChangePassModalShow(true)}\r\n                className=\"admin-card\"\r\n              >\r\n                <h2 className=\"mta\">Change password</h2>\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n          <AddUserModal\r\n            show={addUserModalShow}\r\n            onHide={() => setAddUserModalShow(false)}\r\n            kick={() => onKickedOut()}\r\n          />\r\n          <DeleteUserModal\r\n            show={delUserModalShow}\r\n            onHide={() => setDelUserModalShow(false)}\r\n            kick={() => onKickedOut()}\r\n          />\r\n          <ChangePasswordModal\r\n            show={changePassModalShow}\r\n            onHide={() => setChangePassModalShow(false)}\r\n            kick={() => onKickedOut()}\r\n          />\r\n          {/* <CheckUserModal\r\n            show={checkUserModalShow}\r\n            onHide={() => setCheckUserModalShow(false)}\r\n            kick={() => onKickedOut()}\r\n          /> */}\r\n        </Container>\r\n      ) : (\r\n        <Container>\r\n          <h1>Please enter the admin password</h1>\r\n          <Form.Group className=\"mt50 mb-3\">\r\n            {showKickedMessage ? (\r\n              <div className=\"mb10 error-message\">\r\n                Session expired, please log in again\r\n              </div>\r\n            ) : (\r\n              <> </>\r\n            )}\r\n            <Row>\r\n              <Col xs=\"9\" md=\"4\">\r\n                <Form.Control\r\n                  type=\"password\"\r\n                  placeholder=\"\"\r\n                  readOnly={loginReadOnly ? true : false}\r\n                  ref={loginPassword}\r\n                  onKeyPress={handleLoginEnter}\r\n                  isInvalid={passwordError}\r\n                />\r\n                <Form.Control.Feedback type=\"invalid\">\r\n                  {passwordErrorMessage}\r\n                </Form.Control.Feedback>\r\n              </Col>\r\n              <Col xs=\"auto\">\r\n                <Button\r\n                  onClick={() => onLoginButton(true)}\r\n                  type=\"submit\"\r\n                  disabled={loginReadOnly ? true : false}\r\n                >\r\n                  Login\r\n                </Button>\r\n              </Col>\r\n              {showPasswordSpinner ? (\r\n                <Col xs=\"auto\">\r\n                  <Spinner animation=\"border\" />\r\n                </Col>\r\n              ) : (\r\n                <></>\r\n              )}\r\n            </Row>\r\n          </Form.Group>\r\n        </Container>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Admin;\r\n","// client/src/App.js\n\nimport React from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport { BrowserRouter, Route, Routes } from \"react-router-dom\";\n\nimport Dashboard from \"./pages/Dashboard\";\nimport Admin from \"./pages/Admin\";\n\nimport { Container } from \"react-bootstrap\";\n\nfunction App() {\n  const [data, setData] = React.useState(null);\n\n  return (\n    <BrowserRouter className=\"App\">\n        <Routes>\n          <Route path=\"/admin\" element={<Admin />} />\n          <Route path=\"/\" element={<Dashboard />} />\n        </Routes>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}