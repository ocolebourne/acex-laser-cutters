{"version":3,"sources":["logo.svg","pages/Dashboard.js","pages/Admin.js","App.js","reportWebVitals.js","index.js"],"names":["Chart1","props","React","useState","timeSinceUpdate","data","setData","a","fetch","method","headers","then","response","ok","json","console","log","Error","statusText","chartData","catch","error","gas","value","time","cutter0","cutter1","useEffect","updateGraph","interval","setInterval","clearInterval","Col","xs","className","ResponsiveContainer","width","height","ScatterChart","XAxis","dataKey","domain","name","tickFormatter","unixTime","Date","toLocaleString","type","YAxis","yAxisId","label","angle","position","orientation","status","tickCount","Tooltip","formatter","Scatter","line","stroke","fill","lineJointType","lineType","OverlayTrigger","placement","overlay","id","alt","Dashboard","deviceList","setDeviceList","devices","index","nickname","Navbar","bg","variant","expand","fixed","Container","Brand","href","Toggle","Collapse","Nav","Link","Row","map","device","i","md","Image","fluid","src","DeleteUserModal","readOnly","setReadOnly","cardID","setCardID","scannerEnabled","setScannerEnabled","loadingSpinner","setLoadingSpinner","showSuccessMessage","setShowSuccessMessage","showErrorMessage","setShowErrorMessage","shortCodeInvalid","setShortCodeInvalid","cardIDInvalid","setCardIDInvalid","fieldErrorMsg","setFieldErrorMsg","cardIdInput","useRef","shortCode","handleKeyPress","event","resetModal","key","preventDefault","current","length","currCardId","onSubmit","shortC","card","requestOptions","Authorization","sessionStorage","getItem","body","JSON","stringify","card_id","short_code","setTimeout","onHide","kick","focus","Modal","size","centered","ref","onKeyPress","onBlur","Header","closeButton","Title","Body","Form","Group","Label","Control","placeholder","isInvalid","Feedback","Button","onClick","disabled","AdminModalFooter","cancel","actionButton","actionButtonRed","ChangePasswordModal","passwordError","setPasswordError","oldPassword","newPassword","oldPass","newPass","old_password","new_password","isValid","AddUserModal","Footer","Spinner","animation","Admin","addUserModalShow","setAddUserModalShow","delUserModalShow","setDelUserModalShow","changePassModalShow","setChangePassModalShow","loggedIn","setLoggedIn","loginReadOnly","setLoginReadOnly","passwordErrorMessage","setPasswordErrorMessage","showPasswordSpinner","setShowPasswordSpinner","showKickedMessage","setShowKickedMessage","loginPassword","onLoginButton","password","setItem","token","onKickedOut","removeItem","xl","show","App","path","element","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0ad00b01.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from \"react\";\r\n\r\nimport {\r\n  CartesianGrid,\r\n  Legend,\r\n  ResponsiveContainer,\r\n  Scatter,\r\n  ScatterChart,\r\n  Tooltip,\r\n  XAxis,\r\n  YAxis,\r\n} from \"recharts\";\r\n\r\nimport \"../index.css\";\r\n\r\nimport {\r\n  Navbar,\r\n  Container,\r\n  Nav,\r\n  Column,\r\n  Row,\r\n  Col,\r\n  Image,\r\n  OverlayTrigger,\r\n  Tooltip as BSTooltip,\r\n} from \"react-bootstrap\";\r\n\r\nfunction Chart1(props) {\r\n  const [timeSinceUpdate, setTimeSinceUpdate] = React.useState(0);\r\n  const [data, setData] = React.useState({});\r\n\r\n  React.useEffect(() => {\r\n    updateGraph();\r\n    const interval = setInterval(() => {\r\n      console.log(\"Refreshing Chart 1\");\r\n    }, 120000); //every 2 minutes\r\n\r\n    return () => clearInterval(interval);\r\n  }, []);\r\n\r\n  async function updateGraph() {\r\n    const requestOptions = {\r\n      method: \"GET\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n    fetch(\"/api/getchart1data\", requestOptions)\r\n      .then((response) => {\r\n        if (response.ok) {\r\n          return response.json();\r\n        } else {\r\n          console.log(\"Error updating Chart1\");\r\n          throw new Error(response.statusText);\r\n        }\r\n      })\r\n      .then((chartData) => {\r\n        console.log(chartData);\r\n        setData(chartData);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n        setData({\r\n          gas: [\r\n            { value: 14, time: 1503617297689 },\r\n            { value: 15, time: 1503616962277 },\r\n            { value: 15, time: 1503616882654 },\r\n            { value: 20, time: 1503613184594 },\r\n            { value: 15, time: 1503611308914 },\r\n          ],\r\n          cutter0: [\r\n            { value: 1, time: 1503617247689 },\r\n            { value: 0, time: 1503616965277 },\r\n            { value: 1, time: 1503616882254 },\r\n            { value: 1, time: 1503613134594 },\r\n            { value: 0, time: 1503611305914 },\r\n          ],\r\n          cutter1: [\r\n            { value: 1, time: 1503617247389 },\r\n            { value: 1, time: 1503616965477 },\r\n            { value: 0, time: 1503616882454 },\r\n            { value: 1, time: 1503613133594 },\r\n            { value: 1, time: 1503611305414 },\r\n          ],\r\n        });\r\n      });\r\n  }\r\n\r\n  return (\r\n    <Col xs={12}>\r\n      <div className=\"dash-card\">\r\n        <h3>Usage vs Gas</h3>\r\n        <ResponsiveContainer width=\"95%\" height={500}>\r\n          <ScatterChart>\r\n            <XAxis\r\n              dataKey=\"dt\"\r\n              domain={[\"auto\", \"auto\"]}\r\n              name=\"Time\"\r\n              tickFormatter={(unixTime) => new Date(unixTime).toLocaleString()}\r\n              type=\"number\"\r\n            />\r\n            <YAxis\r\n              yAxisId=\"left\"\r\n              dataKey=\"value\"\r\n              name=\"Gas\"\r\n              label={{ value: \"Gas\", angle: -90, position: \"insideLeft\" }}\r\n            />\r\n            <YAxis\r\n              yAxisId=\"right\"\r\n              dataKey=\"status\"\r\n              name=\"Usage\"\r\n              orientation=\"right\"\r\n              tickFormatter={(status) => (status ? \"In use\" : \"Available\")}\r\n              tickCount={2}\r\n              label={{\r\n                value: \"Laser cutter usage\",\r\n                angle: -90,\r\n                position: \"center\",\r\n              }}\r\n            />\r\n            <Tooltip\r\n              formatter={(value) => {\r\n                if (value > 1000000) {\r\n                  return new Date(value).toLocaleString();\r\n                } else if ((value == 1)) {\r\n                  return \"In use\";\r\n                } else if ((value == 0)) {\r\n                  return \"Available\";\r\n                } else {\r\n                  return value;\r\n                }\r\n              }}\r\n            />\r\n            <Scatter\r\n              yAxisId=\"left\"\r\n              data={data.gas}\r\n              line={{ stroke: \"#8884d8\" }}\r\n              fill=\"#8884d8\"\r\n              lineJointType=\"monotoneX\"\r\n              lineType=\"joint\"\r\n              name=\"Gas\"\r\n            />\r\n            <Scatter\r\n              yAxisId=\"right\"\r\n              data={data.cutter0}\r\n              line={{ stroke: \"#82ca9d\" }}\r\n              fill=\"#82ca9d\"\r\n              lineJointType=\"monotoneX\"\r\n              lineType=\"joint\"\r\n              name=\"Usage\"\r\n            />\r\n            <Scatter\r\n              yAxisId=\"right\"\r\n              data={data.cutter1}\r\n              line={{ stroke: \"#82ca4d\" }}\r\n              fill=\"#82ca9d\"\r\n              lineJointType=\"monotoneX\"\r\n              lineType=\"joint\"\r\n              name=\"Usage\"\r\n            />\r\n          </ScatterChart>\r\n        </ResponsiveContainer>\r\n        <OverlayTrigger\r\n          key=\"chart1\"\r\n          placement=\"top\"\r\n          overlay={<BSTooltip id=\"tooltip-chart1\">Click to refresh</BSTooltip>}\r\n        >\r\n          <a className=\"mla mt10 update-text\" alt=\"Click to refresh\">\r\n            Updated {timeSinceUpdate}mins ago\r\n          </a>\r\n        </OverlayTrigger>\r\n      </div>\r\n    </Col>\r\n  );\r\n}\r\n\r\nfunction Dashboard(props) {\r\n  const [deviceList, setDeviceList] = React.useState([]);\r\n  const [page, setPage] = React.useState(0);\r\n\r\n  function updateDeviceList() {\r\n    const requestOptions = {\r\n      method: \"GET\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n    fetch(\"/api/getdevicestatuses\", requestOptions)\r\n      .then((response) => {\r\n        if (response.ok) {\r\n          return response.json();\r\n        } else {\r\n          console.log(\"Error retrieving devices\");\r\n          throw new Error(response.statusText);\r\n        }\r\n      })\r\n      .then((devices) => {\r\n        console.log(devices);\r\n        setDeviceList(devices);\r\n      })\r\n      .catch((error) => {\r\n        setDeviceList([\r\n          {\r\n            index: 0,\r\n            name: \"abc3.50\",\r\n            nickname: \"Left Laser Cutter\",\r\n            status: 1,\r\n          },\r\n          {\r\n            index: 1,\r\n            name: \"def4.60\",\r\n            nickname: \"Right Laser Cutter\",\r\n            status: 0,\r\n          },\r\n        ]);\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  React.useEffect(() => {\r\n    updateDeviceList();\r\n    const interval = setInterval(() => {\r\n      console.log(\"refreshing devices\");\r\n    }, 15000);\r\n\r\n    return () => clearInterval(interval);\r\n  }, []);\r\n\r\n  return (\r\n    <div id=\"home\">\r\n      <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\" fixed=\"top\">\r\n        <Container>\r\n          <Navbar.Brand href=\"\">AceX Laser Cutters</Navbar.Brand>\r\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n          <Navbar.Collapse id=\"basic-navbar-nav\">\r\n            <Nav className=\"me-auto\">\r\n              <Nav.Link href=\"#home\">Dashboard</Nav.Link>\r\n              <Nav.Link href=\"#charts\">Charts</Nav.Link>\r\n            </Nav>\r\n          </Navbar.Collapse>\r\n        </Container>\r\n      </Navbar>\r\n      <Container>\r\n        <h1 className=\"mt75\">Welcome</h1>\r\n        <Row className=\"justify-content-md-left mt30\">\r\n          {deviceList.map((device, i) => {\r\n            return (\r\n              <Col xs={12} md={6}>\r\n                <div className=\"dash-card\">\r\n                  <Image\r\n                    className=\"laser-icon\"\r\n                    fluid\r\n                    src=\"./laser-cutter-icon.png\"\r\n                    alt=\" \"\r\n                  />\r\n                  <h3>{device.name}</h3>\r\n                  <h3>\r\n                    Status:{\" \"}\r\n                    {device.status ? (\r\n                      <b className=\"in-use-text\">in use</b>\r\n                    ) : (\r\n                      <b className=\"available-text\">available</b>\r\n                    )}\r\n                  </h3>\r\n                </div>\r\n              </Col>\r\n            );\r\n          })}\r\n        </Row>\r\n      </Container>\r\n      <Container id=\"charts\">\r\n        <h1>Charts</h1>\r\n        <Row className=\"justify-content-md-left mt30\">\r\n          <Chart1 />\r\n        </Row>\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Dashboard;\r\n","import React from \"react\";\r\nimport { useCookies } from \"react-cookie\";\r\n\r\nimport \"../index.css\";\r\nimport {\r\n  Navbar,\r\n  Container,\r\n  Nav,\r\n  Column,\r\n  Row,\r\n  Col,\r\n  Modal,\r\n  Button,\r\n  Form,\r\n  Spinner,\r\n} from \"react-bootstrap\";\r\n\r\n// function templateModal(props) {\r\n//   const [readOnly, setReadOnly] = React.useState(false);\r\n//   const [loadingSpinner, setLoadingSpinner] = React.useState(false);\r\n\r\n//   const oldPassword = React.useRef();\r\n\r\n//   const handleKeyPress = (event) => {\r\n//       if (event.key === \"Enter\") {\r\n//         onSubmit();\r\n//       }\r\n//   };\r\n\r\n//   function onSubmit() {\r\n//     setReadOnly(true)\r\n//   }\r\n\r\n//   return (\r\n//     <Modal\r\n//       {...props}\r\n//       size=\"lg\"\r\n//       aria-labelledby=\"contained-modal-title-vcenter\"\r\n//       centered\r\n//     >\r\n//       <Modal.Header closeButton>\r\n//         <Modal.Title id=\"contained-modal-title-vcenter\">Add User</Modal.Title>\r\n//       </Modal.Header>\r\n//       <Modal.Body>\r\n//         <Form.Group className=\"mb-3\">\r\n//           <Form.Label>Short code</Form.Label>\r\n//           <Form.Control\r\n//             type=\"text\"\r\n//             placeholder=\"e.g. ab1234\"\r\n//             readOnly={readOnly ? true : false}\r\n//           />\r\n//         </Form.Group>\r\n//       </Modal.Body>\r\n//       <Modal.Footer>\r\n//         <Button variant=\"primary\" type=\"submit\">\r\n//           Change Password\r\n//         </Button>\r\n//         <Button variant=\"secondary\" onClick={props.onHide}>\r\n//           Cancel\r\n//         </Button>\r\n//       </Modal.Footer>\r\n//     </Modal>\r\n//   );\r\n// }\r\n\r\n//function CheckUserModal\r\n\r\nfunction DeleteUserModal(props) {\r\n  const [readOnly, setReadOnly] = React.useState(false);\r\n  const [cardID, setCardID] = React.useState(\"\");\r\n  const [scannerEnabled, setScannerEnabled] = React.useState(false);\r\n  const [loadingSpinner, setLoadingSpinner] = React.useState(false);\r\n  const [showSuccessMessage, setShowSuccessMessage] = React.useState(false);\r\n  const [showErrorMessage, setShowErrorMessage] = React.useState(false);\r\n  const [shortCodeInvalid, setShortCodeInvalid] = React.useState(false);\r\n  const [cardIDInvalid, setCardIDInvalid] = React.useState(false);\r\n  const [fieldErrorMsg, setFieldErrorMsg] = React.useState(\"\");\r\n\r\n  const cardIdInput = React.useRef();\r\n  const shortCode = React.useRef();\r\n\r\n  const handleKeyPress = (event) => {\r\n    resetModal();\r\n    if (event.key === \"Enter\") {\r\n      if (scannerEnabled) {\r\n        //if enter key prevent default\r\n        event.preventDefault();\r\n        console.log(cardIdInput.current.value);\r\n        if (cardIdInput.current.value.length === 10) {\r\n          //if input data length 10, run finduser\r\n          console.log(\"here\");\r\n          const currCardId = cardIdInput.current.value;\r\n          setCardID(currCardId);\r\n        }\r\n      } else {\r\n        onSubmit();\r\n        readOnly(true);\r\n      }\r\n    }\r\n  };\r\n\r\n  function resetModal() {\r\n    setShowSuccessMessage(false);\r\n    setShowErrorMessage(false);\r\n    setShortCodeInvalid(false);\r\n    setCardIDInvalid(false);\r\n    setReadOnly(false);\r\n  }\r\n\r\n  function onSubmit() {\r\n    const shortC = shortCode.current.value;\r\n    const card = cardIdInput.current.value;\r\n    if (!shortC && !card) {\r\n      setFieldErrorMsg(\"Please enter valid user details\");\r\n      setShortCodeInvalid(true);\r\n      setCardIDInvalid(true);\r\n    } else {\r\n      setReadOnly(true);\r\n      const requestOptions = {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: `Bearer ${sessionStorage.getItem(\"token\")}`,\r\n        },\r\n      };\r\n      if (card) {\r\n        requestOptions.body = JSON.stringify({\r\n          card_id: card,\r\n        });\r\n      } else if (shortC) {\r\n        requestOptions.body = JSON.stringify({\r\n          short_code: shortC,\r\n        });\r\n      }\r\n      fetch(\"/api/delUser\", requestOptions)\r\n        .then((response) => {\r\n          if (response.ok) {\r\n            setLoadingSpinner(false);\r\n            setShowSuccessMessage(true);\r\n            setTimeout(() => {\r\n              props.onHide();\r\n              resetModal();\r\n              setCardID(\"\");\r\n            }, 2000);\r\n          } else if (response.status === 403) {\r\n            console.log(\"Auth token bad\");\r\n            resetModal();\r\n            setCardID(\"\");\r\n            props.kick();\r\n            throw new Error(response.statusText);\r\n          } else if (response.status === 404) {\r\n            console.log(\"User not found\");\r\n            setFieldErrorMsg(\"User not found, try again\");\r\n            setCardID(\"\");\r\n            if (card) {\r\n              setCardIDInvalid(true);\r\n            } else if (shortC) {\r\n              setShortCodeInvalid(true);\r\n            }\r\n            throw new Error(response.statusText);\r\n          } else {\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n          setReadOnly(false);\r\n          setLoadingSpinner(false);\r\n          setShowErrorMessage(true);\r\n        });\r\n    }\r\n  }\r\n\r\n  React.useEffect(() => {\r\n    if (scannerEnabled) {\r\n      cardIdInput.current.value = \"\";\r\n      cardIdInput.current.focus();\r\n      setShowSuccessMessage(false);\r\n      setShowErrorMessage(false);\r\n      setShortCodeInvalid(false);\r\n      setCardIDInvalid(false);\r\n      setCardID(\"\");\r\n    }\r\n  }, [scannerEnabled]);\r\n\r\n  return (\r\n    <Modal\r\n      {...props}\r\n      size=\"lg\"\r\n      aria-labelledby=\"contained-modal-title-vcenter\"\r\n      centered\r\n    >\r\n      <input\r\n        className=\"scanner-input\"\r\n        ref={cardIdInput}\r\n        onKeyPress={handleKeyPress}\r\n        onBlur={() => setScannerEnabled(false)}\r\n      />\r\n      <Modal.Header closeButton>\r\n        <Modal.Title id=\"contained-modal-title-vcenter\">\r\n          Delete User\r\n        </Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        <Form.Group className=\"mb-3\">\r\n          <Form.Label>Short code</Form.Label>\r\n          <Form.Control\r\n            type=\"text\"\r\n            placeholder=\"e.g. ab1234\"\r\n            readOnly={readOnly ? true : false}\r\n            onKeyPress={handleKeyPress}\r\n            ref={shortCode}\r\n            isInvalid={shortCodeInvalid}\r\n          />\r\n          <Form.Control.Feedback type=\"invalid\">\r\n            {fieldErrorMsg}\r\n          </Form.Control.Feedback>\r\n        </Form.Group>\r\n        <h5 className=\"mb20\">OR</h5>\r\n        <Form.Group className=\"mb-3\">\r\n          <Form.Label>Card ID</Form.Label>\r\n          <Row>\r\n            <Col xs=\"auto\">\r\n              <Button\r\n                className=\"scanner-button\"\r\n                onClick={() => setScannerEnabled(true)}\r\n                variant=\"primary\"\r\n                disabled={scannerEnabled || readOnly ? true : false}\r\n              >\r\n                {scannerEnabled ? \"Scan card\" : \"Enable Scanner\"}\r\n              </Button>\r\n            </Col>\r\n            <Col>\r\n              <Form.Control\r\n                type=\"password\"\r\n                placeholder=\"\"\r\n                value={cardID}\r\n                readOnly\r\n                isInvalid={cardIDInvalid}\r\n              />\r\n              <Form.Control.Feedback type=\"invalid\">\r\n                {fieldErrorMsg}\r\n              </Form.Control.Feedback>\r\n            </Col>\r\n          </Row>\r\n        </Form.Group>\r\n      </Modal.Body>\r\n      <AdminModalFooter\r\n        loadingSpinner={loadingSpinner}\r\n        showErrorMessage={showErrorMessage}\r\n        showSuccessMessage={showSuccessMessage}\r\n        readOnly={readOnly}\r\n        onSubmit={onSubmit}\r\n        onHide={props.onHide}\r\n        cancel={\"Cancel\"}\r\n        actionButton={\"Delete User\"}\r\n        actionButtonRed={true}\r\n      />\r\n    </Modal>\r\n  );\r\n}\r\n\r\nfunction ChangePasswordModal(props) {\r\n  const [readOnly, setReadOnly] = React.useState(false);\r\n  const [loadingSpinner, setLoadingSpinner] = React.useState(false);\r\n  const [passwordError, setPasswordError] = React.useState(false);\r\n  const [showSuccessMessage, setShowSuccessMessage] = React.useState(false);\r\n  const [showErrorMessage, setShowErrorMessage] = React.useState(false);\r\n\r\n  const oldPassword = React.useRef();\r\n  const newPassword = React.useRef();\r\n\r\n  const handleKeyPress = (event) => {\r\n    resetModal();\r\n    if (event.key === \"Enter\") {\r\n      onSubmit();\r\n    }\r\n  };\r\n\r\n  function resetModal() {\r\n    setShowSuccessMessage(false);\r\n    setShowErrorMessage(false);\r\n    setPasswordError(false);\r\n  }\r\n\r\n  function onSubmit() {\r\n    setReadOnly(true);\r\n    const oldPass = oldPassword.current.value;\r\n    const newPass = newPassword.current.value;\r\n    const requestOptions = {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${sessionStorage.getItem(\"token\")}`,\r\n      },\r\n      body: JSON.stringify({ old_password: oldPass, new_password: newPass }),\r\n    };\r\n    fetch(\"/api/changepass\", requestOptions)\r\n      .then((response) => {\r\n        if (response.ok) {\r\n          setLoadingSpinner(false);\r\n          setShowSuccessMessage(true);\r\n          setTimeout(() => {\r\n            props.onHide();\r\n            setReadOnly(false);\r\n            setShowSuccessMessage(false);\r\n          }, 2000);\r\n        } else if (response.status === 401) {\r\n          console.log(\"Incorrect old password\");\r\n          setPasswordError(true);\r\n          throw new Error(response.statusText);\r\n        } else if (response.status === 403) {\r\n          console.log(\"Auth token bad\");\r\n          props.kick();\r\n          throw new Error(response.statusText);\r\n        } else {\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n        setReadOnly(false);\r\n        setLoadingSpinner(false);\r\n        setShowErrorMessage(true);\r\n      });\r\n  }\r\n\r\n  return (\r\n    <Modal\r\n      {...props}\r\n      size=\"lg\"\r\n      aria-labelledby=\"contained-modal-title-vcenter\"\r\n      centered\r\n    >\r\n      <Modal.Header closeButton>\r\n        <Modal.Title id=\"contained-modal-title-vcenter\">\r\n          Change Admin Password\r\n        </Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        <Form>\r\n          <Form.Group className=\"mb-3\">\r\n            <Form.Label>Old password</Form.Label>\r\n            <Form.Control\r\n              type=\"password\"\r\n              placeholder=\"\"\r\n              readOnly={readOnly ? true : false}\r\n              ref={oldPassword}\r\n              isInvalid={passwordError}\r\n              isValid={showSuccessMessage}\r\n              onKeyPress={handleKeyPress}\r\n            />\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              Incorrect old password, try again\r\n            </Form.Control.Feedback>\r\n          </Form.Group>\r\n          <Form.Group className=\"mb-3\">\r\n            <Form.Label>New password</Form.Label>\r\n            <Form.Control\r\n              type=\"password\"\r\n              placeholder=\"\"\r\n              readOnly={readOnly ? true : false}\r\n              ref={newPassword}\r\n              onKeyPress={handleKeyPress}\r\n              isValid={showSuccessMessage}\r\n            />\r\n          </Form.Group>\r\n        </Form>\r\n      </Modal.Body>\r\n      <AdminModalFooter\r\n        loadingSpinner={loadingSpinner}\r\n        showErrorMessage={showErrorMessage}\r\n        showSuccessMessage={showSuccessMessage}\r\n        readOnly={readOnly}\r\n        onSubmit={onSubmit}\r\n        onHide={props.onHide}\r\n        cancel={\"Cancel\"}\r\n        actionButton={\"Change Password\"}\r\n      />\r\n    </Modal>\r\n  );\r\n}\r\n\r\n// function CheckUserModal(props) {\r\n//   const [readOnly, setReadOnly] = React.useState(false);\r\n//   const [cardID, setCardID] = React.useState(\"\");\r\n//   const [scannerEnabled, setScannerEnabled] = React.useState(false);\r\n//   const [loadingSpinner, setLoadingSpinner] = React.useState(false);\r\n//   const [showSuccessMessage, setShowSuccessMessage] = React.useState(false);\r\n//   const [showErrorMessage, setShowErrorMessage] = React.useState(false);\r\n//   const [cardIDInvalid, setCardIDInvalid] = React.useState(false);\r\n//   const [cardIDInvalid, setCardIDInvalid] = React.useState(false);\r\n\r\n//   const cardIdInput = React.useRef();\r\n\r\n//   const handleKeyPress = (event) => {\r\n//     resetModal();\r\n//     if (event.key === \"Enter\") {\r\n//       if (scannerEnabled) {\r\n//         //if enter key prevent default\r\n//         event.preventDefault();\r\n//         console.log(cardIdInput.current.value);\r\n//         if (cardIdInput.current.value.length === 10) {\r\n//           //if input data length 10, run finduser\r\n//           console.log(\"here\");\r\n//           const currCardId = cardIdInput.current.value;\r\n//           setCardID(currCardId);\r\n//         }\r\n//       } else {\r\n//         onSubmit();\r\n//         readOnly(true);\r\n//       }\r\n//     }\r\n//   };\r\n\r\n//   function resetModal() {\r\n//     setShowSuccessMessage(false);\r\n//     setShowErrorMessage(false);\r\n//     setCardIDInvalid(false);\r\n//   }\r\n\r\n//   function onSubmit() {\r\n//     const card = cardIdInput.current.value;\r\n//     if (!card) {\r\n//       setCardIDInvalid(true);\r\n//     } else {\r\n//       setReadOnly(true);\r\n//       const requestOptions = {\r\n//         method: \"POST\",\r\n//         headers: {\r\n//           \"Content-Type\": \"application/json\",\r\n//           Authorization: `Bearer ${sessionStorage.getItem(\"token\")}`,\r\n//         },\r\n//         body: JSON.stringify({ card_id: card }),\r\n//       };\r\n//       fetch(\"/api/checkUser\", requestOptions)\r\n//         .then((response) => {\r\n//           if (response.ok) {\r\n//             setLoadingSpinner(false);\r\n//             setShowSuccessMessage(true);\r\n\r\n//           } else if (response.status === 403) {\r\n//             console.log(\"Auth token bad\");\r\n//             props.kick();\r\n//             throw new Error(response.statusText);\r\n//           } else {\r\n//           }\r\n//         })\r\n//         .catch((error) => {\r\n//           console.log(error);\r\n//           setReadOnly(false);\r\n//           setLoadingSpinner(false);\r\n//           setShowErrorMessage(true);\r\n//         });\r\n//     }\r\n//   }\r\n\r\n//   React.useEffect(() => {\r\n//     if (scannerEnabled) {\r\n//       cardIdInput.current.value = \"\";\r\n//       cardIdInput.current.focus();\r\n//     }\r\n//   }, [scannerEnabled]);\r\n\r\n//   return (\r\n//     <Modal\r\n//       {...props}\r\n//       size=\"lg\"\r\n//       aria-labelledby=\"contained-modal-title-vcenter\"\r\n//       centered\r\n//     >\r\n//       <input\r\n//         className=\"scanner-input\"\r\n//         ref={cardIdInput}\r\n//         onKeyPress={handleKeyPress}\r\n//         onBlur={() => setScannerEnabled(false)}\r\n//       />\r\n//       <Modal.Header closeButton>\r\n//         <Modal.Title id=\"contained-modal-title-vcenter\">Add User</Modal.Title>\r\n//       </Modal.Header>\r\n//       <Modal.Body>\r\n//         <Form.Group className=\"mb-3\">\r\n//           <Form.Label>Short code</Form.Label>\r\n//           <Form.Control\r\n//             type=\"text\"\r\n//             placeholder=\"e.g. ab1234\"\r\n//             readOnly={readOnly ? true : false}\r\n//             onKeyPress={handleKeyPress}\r\n//             ref={shortCode}\r\n//             isInvalid={shortCodeInvalid}\r\n//           />\r\n//           <Form.Control.Feedback type=\"invalid\">\r\n//             Please enter a short code.\r\n//           </Form.Control.Feedback>\r\n//         </Form.Group>\r\n//         <Form.Group className=\"mb-3\">\r\n//           <Form.Label>Card ID</Form.Label>\r\n//           <Row>\r\n//             <Col xs=\"auto\">\r\n//               <Button\r\n//                 className=\"scanner-button\"\r\n//                 onClick={() => setScannerEnabled(true)}\r\n//                 variant=\"primary\"\r\n//                 disabled={scannerEnabled || readOnly ? true : false}\r\n//               >\r\n//                 {scannerEnabled ? \"Scan card\" : \"Enable Scanner\"}\r\n//               </Button>\r\n//             </Col>\r\n//             <Col>\r\n//               <Form.Control\r\n//                 type=\"password\"\r\n//                 placeholder=\"\"\r\n//                 value={cardID}\r\n//                 readOnly\r\n//                 isInvalid={cardIDInvalid}\r\n//               />\r\n//               <Form.Control.Feedback type=\"invalid\">\r\n//                 Please add a card ID.\r\n//               </Form.Control.Feedback>\r\n//             </Col>\r\n//           </Row>\r\n//         </Form.Group>\r\n//       </Modal.Body>\r\n//       <AdminModalFooter\r\n//         loadingSpinner={loadingSpinner}\r\n//         showErrorMessage={showErrorMessage}\r\n//         showSuccessMessage={showSuccessMessage}\r\n//         readOnly={readOnly}\r\n//         onSubmit={onSubmit}\r\n//         onHide={props.onHide}\r\n//         cancel={\"Cancel\"}\r\n//         actionButton={\"Add User\"}\r\n//       />\r\n//     </Modal>\r\n//   );\r\n// }\r\n\r\nfunction AddUserModal(props) {\r\n  const [readOnly, setReadOnly] = React.useState(false);\r\n  const [cardID, setCardID] = React.useState(\"\");\r\n  const [scannerEnabled, setScannerEnabled] = React.useState(false);\r\n  const [loadingSpinner, setLoadingSpinner] = React.useState(false);\r\n  const [showSuccessMessage, setShowSuccessMessage] = React.useState(false);\r\n  const [showErrorMessage, setShowErrorMessage] = React.useState(false);\r\n  const [shortCodeInvalid, setShortCodeInvalid] = React.useState(false);\r\n  const [cardIDInvalid, setCardIDInvalid] = React.useState(false);\r\n\r\n  const cardIdInput = React.useRef();\r\n  const shortCode = React.useRef();\r\n\r\n  const handleKeyPress = (event) => {\r\n    resetModal();\r\n    if (event.key === \"Enter\") {\r\n      if (scannerEnabled) {\r\n        //if enter key prevent default\r\n        event.preventDefault();\r\n        console.log(cardIdInput.current.value);\r\n        if (cardIdInput.current.value.length === 10) {\r\n          //if input data length 10, run finduser\r\n          console.log(\"here\");\r\n          const currCardId = cardIdInput.current.value;\r\n          setCardID(currCardId);\r\n        }\r\n      } else {\r\n        onSubmit();\r\n        readOnly(true);\r\n      }\r\n    }\r\n  };\r\n\r\n  function resetModal() {\r\n    setShowSuccessMessage(false);\r\n    setShowErrorMessage(false);\r\n    setShortCodeInvalid(false);\r\n    setCardIDInvalid(false);\r\n    setReadOnly(false);\r\n  }\r\n\r\n  function onSubmit() {\r\n    const shortC = shortCode.current.value;\r\n    const card = cardIdInput.current.value;\r\n    if (!shortC) {\r\n      setShortCodeInvalid(true);\r\n    } else if (!card) {\r\n      setCardIDInvalid(true);\r\n    } else {\r\n      setReadOnly(true);\r\n      const requestOptions = {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: `Bearer ${sessionStorage.getItem(\"token\")}`,\r\n        },\r\n        body: JSON.stringify({ short_code: shortC, card_id: card }),\r\n      };\r\n      fetch(\"/api/addUser\", requestOptions)\r\n        .then((response) => {\r\n          if (response.ok) {\r\n            setLoadingSpinner(false);\r\n            setShowSuccessMessage(true);\r\n            setTimeout(() => {\r\n              props.onHide();\r\n              setCardID(\"\");\r\n              resetModal();\r\n            }, 2000);\r\n          } else if (response.status === 403) {\r\n            console.log(\"Auth token bad\");\r\n            props.kick();\r\n            throw new Error(response.statusText);\r\n          } else {\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n          setReadOnly(false);\r\n          setLoadingSpinner(false);\r\n          setShowErrorMessage(true);\r\n        });\r\n    }\r\n  }\r\n\r\n  React.useEffect(() => {\r\n    if (scannerEnabled) {\r\n      cardIdInput.current.value = \"\";\r\n      cardIdInput.current.focus();\r\n      resetModal();\r\n      setCardID(\"\");\r\n    }\r\n  }, [scannerEnabled]);\r\n\r\n  return (\r\n    <Modal\r\n      {...props}\r\n      size=\"lg\"\r\n      aria-labelledby=\"contained-modal-title-vcenter\"\r\n      centered\r\n    >\r\n      <input\r\n        className=\"scanner-input\"\r\n        ref={cardIdInput}\r\n        onKeyPress={handleKeyPress}\r\n        onBlur={() => setScannerEnabled(false)}\r\n      />\r\n      <Modal.Header closeButton>\r\n        <Modal.Title id=\"contained-modal-title-vcenter\">Add User</Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        <Form.Group className=\"mb-3\">\r\n          <Form.Label>Short code</Form.Label>\r\n          <Form.Control\r\n            type=\"text\"\r\n            placeholder=\"e.g. ab1234\"\r\n            readOnly={readOnly ? true : false}\r\n            onKeyPress={handleKeyPress}\r\n            ref={shortCode}\r\n            isInvalid={shortCodeInvalid}\r\n          />\r\n          <Form.Control.Feedback type=\"invalid\">\r\n            Please enter a short code.\r\n          </Form.Control.Feedback>\r\n        </Form.Group>\r\n        <Form.Group className=\"mb-3\">\r\n          <Form.Label>Card ID</Form.Label>\r\n          <Row>\r\n            <Col xs=\"auto\">\r\n              <Button\r\n                className=\"scanner-button\"\r\n                onClick={() => setScannerEnabled(true)}\r\n                variant=\"primary\"\r\n                disabled={scannerEnabled || readOnly ? true : false}\r\n              >\r\n                {scannerEnabled ? \"Scan card\" : \"Enable Scanner\"}\r\n              </Button>\r\n            </Col>\r\n            <Col>\r\n              <Form.Control\r\n                type=\"password\"\r\n                placeholder=\"\"\r\n                value={cardID}\r\n                readOnly\r\n                isInvalid={cardIDInvalid}\r\n              />\r\n              <Form.Control.Feedback type=\"invalid\">\r\n                Please add a card ID.\r\n              </Form.Control.Feedback>\r\n            </Col>\r\n          </Row>\r\n        </Form.Group>\r\n      </Modal.Body>\r\n      <AdminModalFooter\r\n        loadingSpinner={loadingSpinner}\r\n        showErrorMessage={showErrorMessage}\r\n        showSuccessMessage={showSuccessMessage}\r\n        readOnly={readOnly}\r\n        onSubmit={onSubmit}\r\n        onHide={props.onHide}\r\n        cancel={\"Cancel\"}\r\n        actionButton={\"Add User\"}\r\n      />\r\n    </Modal>\r\n  );\r\n}\r\n\r\nfunction AdminModalFooter(props) {\r\n  return (\r\n    <Modal.Footer>\r\n      {props.loadingSpinner ? (\r\n        <Col xs=\"auto\">\r\n          <Spinner className=\"mra\" animation=\"border\" />\r\n        </Col>\r\n      ) : (\r\n        <></>\r\n      )}\r\n      {props.showSuccessMessage ? (\r\n        <Col xs=\"auto\">\r\n          <div className=\"mra success-message\">Success</div>\r\n        </Col>\r\n      ) : (\r\n        <></>\r\n      )}\r\n      {props.showErrorMessage ? (\r\n        <Col xs=\"auto\">\r\n          <div className=\"mra error-message\">Error</div>\r\n        </Col>\r\n      ) : (\r\n        <></>\r\n      )}\r\n      <Button variant=\"secondary\" onClick={props.onHide} className=\"mla\">\r\n        {props.cancel}\r\n      </Button>\r\n      <Button\r\n        variant={props.actionButtonRed ? \"danger\" : \"primary\"}\r\n        type=\"submit\"\r\n        onClick={() => props.onSubmit()}\r\n        disabled={props.readOnly ? true : false}\r\n      >\r\n        {props.actionButton}\r\n      </Button>\r\n    </Modal.Footer>\r\n  );\r\n}\r\n\r\nfunction Admin(props) {\r\n  const [addUserModalShow, setAddUserModalShow] = React.useState(false);\r\n  const [delUserModalShow, setDelUserModalShow] = React.useState(false);\r\n  const [changePassModalShow, setChangePassModalShow] = React.useState(false);\r\n  // const [checkUserModalShow, setCheckUserModalShow] = React.useState(false);\r\n  const [loggedIn, setLoggedIn] = React.useState(false);\r\n  const [loginReadOnly, setLoginReadOnly] = React.useState(false);\r\n  const [passwordError, setPasswordError] = React.useState(false);\r\n  const [passwordErrorMessage, setPasswordErrorMessage] = React.useState(\"\");\r\n  const [showPasswordSpinner, setShowPasswordSpinner] = React.useState(false);\r\n  const [showKickedMessage, setShowKickedMessage] = React.useState(false);\r\n\r\n  const loginPassword = React.useRef();\r\n\r\n  function onLoginButton() {\r\n    const password = loginPassword.current.value;\r\n    setShowPasswordSpinner(true);\r\n    setLoginReadOnly(true);\r\n    const requestOptions = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ password: password }),\r\n    };\r\n    fetch(\"/api/login\", requestOptions)\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        setShowPasswordSpinner(false);\r\n        sessionStorage.setItem(\"token\", data.token);\r\n        setLoginReadOnly(false);\r\n        setLoggedIn(true);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n        setShowPasswordSpinner(false);\r\n        setLoginReadOnly(false);\r\n        setPasswordError(true);\r\n        setPasswordErrorMessage(\"Incorrect password, try again\");\r\n      });\r\n  }\r\n\r\n  function onLogoutButton() {\r\n    sessionStorage.removeItem(\"token\");\r\n    setLoggedIn(false);\r\n  }\r\n\r\n  function onKickedOut() {\r\n    sessionStorage.removeItem(\"token\");\r\n    setLoggedIn(false);\r\n    setShowKickedMessage(true);\r\n  }\r\n\r\n  function handleLoginEnter(event) {\r\n    setPasswordError(false);\r\n    if (event.key === \"Enter\") {\r\n      onLoginButton();\r\n    }\r\n  }\r\n\r\n  React.useEffect(() => {\r\n    if (sessionStorage.getItem(\"token\")) {\r\n      setLoggedIn(true);\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <Navbar bg=\"light\">\r\n        <Container>\r\n          <Navbar.Brand href=\"\">AceX Admin</Navbar.Brand>\r\n          {loggedIn ? (\r\n            <Nav.Link onClick={() => onLogoutButton()}>Logout</Nav.Link>\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </Container>\r\n      </Navbar>\r\n      {loggedIn ? (\r\n        <Container>\r\n          <h1>Welcome</h1>\r\n          <Row className=\"justify-content-md-left mt50\">\r\n            <Col xs={6} md={4} xl={3}>\r\n              <div\r\n                onClick={() => setAddUserModalShow(true)}\r\n                className=\"admin-card\"\r\n              >\r\n                <h2 className=\"mta\">Add user</h2>\r\n              </div>\r\n            </Col>\r\n            <Col xs={6} md={4} xl={3}>\r\n              <div\r\n                onClick={() => setDelUserModalShow(true)}\r\n                className=\"admin-card\"\r\n              >\r\n                <h2 className=\"mta\">Delete user</h2>\r\n              </div>\r\n            </Col>\r\n            <Col xs={6} md={4} xl={3}>\r\n              <div\r\n                onClick={() => setChangePassModalShow(true)}\r\n                className=\"admin-card\"\r\n              >\r\n                <h2 className=\"mta\">Change password</h2>\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n          <AddUserModal\r\n            show={addUserModalShow}\r\n            onHide={() => setAddUserModalShow(false)}\r\n            kick={() => onKickedOut()}\r\n          />\r\n          <DeleteUserModal\r\n            show={delUserModalShow}\r\n            onHide={() => setDelUserModalShow(false)}\r\n            kick={() => onKickedOut()}\r\n          />\r\n          <ChangePasswordModal\r\n            show={changePassModalShow}\r\n            onHide={() => setChangePassModalShow(false)}\r\n            kick={() => onKickedOut()}\r\n          />\r\n          {/* <CheckUserModal\r\n            show={checkUserModalShow}\r\n            onHide={() => setCheckUserModalShow(false)}\r\n            kick={() => onKickedOut()}\r\n          /> */}\r\n        </Container>\r\n      ) : (\r\n        <Container>\r\n          <h1>Please enter the admin password</h1>\r\n          <Form.Group className=\"mt50 mb-3\">\r\n            {showKickedMessage ? (\r\n              <div className=\"mb10 error-message\">\r\n                Session expired, please log in again\r\n              </div>\r\n            ) : (\r\n              <> </>\r\n            )}\r\n            <Row>\r\n              <Col xs=\"9\" md=\"4\">\r\n                <Form.Control\r\n                  type=\"password\"\r\n                  placeholder=\"\"\r\n                  readOnly={loginReadOnly ? true : false}\r\n                  ref={loginPassword}\r\n                  onKeyPress={handleLoginEnter}\r\n                  isInvalid={passwordError}\r\n                />\r\n                <Form.Control.Feedback type=\"invalid\">\r\n                  {passwordErrorMessage}\r\n                </Form.Control.Feedback>\r\n              </Col>\r\n              <Col xs=\"auto\">\r\n                <Button\r\n                  onClick={() => onLoginButton(true)}\r\n                  type=\"submit\"\r\n                  disabled={loginReadOnly ? true : false}\r\n                >\r\n                  Login\r\n                </Button>\r\n              </Col>\r\n              {showPasswordSpinner ? (\r\n                <Col xs=\"auto\">\r\n                  <Spinner animation=\"border\" />\r\n                </Col>\r\n              ) : (\r\n                <></>\r\n              )}\r\n            </Row>\r\n          </Form.Group>\r\n        </Container>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Admin;\r\n","// client/src/App.js\n\nimport React from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport { BrowserRouter, Route, Routes } from \"react-router-dom\";\n\nimport Dashboard from \"./pages/Dashboard\";\nimport Admin from \"./pages/Admin\";\n\nimport { Container } from \"react-bootstrap\";\n\nfunction App() {\n  const [data, setData] = React.useState(null);\n\n  return (\n    <BrowserRouter className=\"App\">\n        <Routes>\n          <Route path=\"/admin\" element={<Admin />} />\n          <Route path=\"/\" element={<Dashboard />} />\n        </Routes>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}