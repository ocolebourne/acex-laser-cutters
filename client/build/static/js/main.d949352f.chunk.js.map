{"version":3,"sources":["logo.svg","pages/Dashboard.js","pages/Admin.js","App.js","reportWebVitals.js","index.js"],"names":["Dashboard","props","Navbar","bg","Container","Brand","href","Nav","Link","Row","Col","DeleteUserModal","React","useState","readOnly","setReadOnly","cardID","setCardID","scannerEnabled","setScannerEnabled","loadingSpinner","setLoadingSpinner","showSuccessMessage","setShowSuccessMessage","showErrorMessage","setShowErrorMessage","shortCodeInvalid","setShortCodeInvalid","cardIDInvalid","setCardIDInvalid","fieldErrorMsg","setFieldErrorMsg","cardIdInput","useRef","shortCode","handleKeyPress","event","resetModal","key","preventDefault","console","log","current","value","length","currCardId","onSubmit","shortC","card","requestOptions","method","headers","Authorization","sessionStorage","getItem","body","JSON","stringify","card_id","short_code","fetch","then","response","ok","setTimeout","onHide","status","kick","Error","statusText","catch","error","useEffect","focus","Modal","size","centered","className","ref","onKeyPress","onBlur","Header","closeButton","Title","id","Body","Form","Group","Label","Control","type","placeholder","isInvalid","Feedback","xs","Button","onClick","variant","disabled","AdminModalFooter","cancel","actionButton","actionButtonRed","ChangePasswordModal","passwordError","setPasswordError","oldPassword","newPassword","oldPass","newPass","old_password","new_password","isValid","AddUserModal","Footer","Spinner","animation","Admin","addUserModalShow","setAddUserModalShow","delUserModalShow","setDelUserModalShow","changePassModalShow","setChangePassModalShow","loggedIn","setLoggedIn","loginReadOnly","setLoginReadOnly","passwordErrorMessage","setPasswordErrorMessage","showPasswordSpinner","setShowPasswordSpinner","showKickedMessage","setShowKickedMessage","loginPassword","onLoginButton","password","json","data","setItem","token","onKickedOut","removeItem","md","xl","show","App","path","element","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d949352f.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from \"react\";\r\n\r\nimport \"../index.css\";\r\nimport { Navbar, Container, Nav, Column, Row, Col } from \"react-bootstrap\";\r\n\r\nfunction Dashboard(props) {\r\n  return (\r\n    <div>\r\n      <Navbar bg=\"light\">\r\n        <Container>\r\n          <Navbar.Brand href=\"\">AceX Admin</Navbar.Brand>\r\n          <Nav.Link href=\"#link\">Logout</Nav.Link>\r\n        </Container>\r\n      </Navbar>\r\n      <Container>\r\n        <h1>Welcome</h1>\r\n        <Row>\r\n          <Col></Col>\r\n        </Row>\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Dashboard;\r\n","import React from \"react\";\r\nimport { useCookies } from \"react-cookie\";\r\n\r\nimport \"../index.css\";\r\nimport {\r\n  Navbar,\r\n  Container,\r\n  Nav,\r\n  Column,\r\n  Row,\r\n  Col,\r\n  Modal,\r\n  Button,\r\n  Form,\r\n  Spinner,\r\n} from \"react-bootstrap\";\r\n\r\n// function templateModal(props) {\r\n//   const [readOnly, setReadOnly] = React.useState(false);\r\n//   const [loadingSpinner, setLoadingSpinner] = React.useState(false);\r\n\r\n//   const oldPassword = React.useRef();\r\n\r\n//   const handleKeyPress = (event) => {\r\n//       if (event.key === \"Enter\") {\r\n//         onSubmit();\r\n//       }\r\n//   };\r\n\r\n//   function onSubmit() {\r\n//     setReadOnly(true)\r\n//   }\r\n\r\n//   return (\r\n//     <Modal\r\n//       {...props}\r\n//       size=\"lg\"\r\n//       aria-labelledby=\"contained-modal-title-vcenter\"\r\n//       centered\r\n//     >\r\n//       <Modal.Header closeButton>\r\n//         <Modal.Title id=\"contained-modal-title-vcenter\">Add User</Modal.Title>\r\n//       </Modal.Header>\r\n//       <Modal.Body>\r\n//         <Form.Group className=\"mb-3\">\r\n//           <Form.Label>Short code</Form.Label>\r\n//           <Form.Control\r\n//             type=\"text\"\r\n//             placeholder=\"e.g. ab1234\"\r\n//             readOnly={readOnly ? true : false}\r\n//           />\r\n//         </Form.Group>\r\n//       </Modal.Body>\r\n//       <Modal.Footer>\r\n//         <Button variant=\"primary\" type=\"submit\">\r\n//           Change Password\r\n//         </Button>\r\n//         <Button variant=\"secondary\" onClick={props.onHide}>\r\n//           Cancel\r\n//         </Button>\r\n//       </Modal.Footer>\r\n//     </Modal>\r\n//   );\r\n// }\r\n\r\n//function CheckUserModal\r\n\r\nfunction DeleteUserModal(props) {\r\n  const [readOnly, setReadOnly] = React.useState(false);\r\n  const [cardID, setCardID] = React.useState(\"\");\r\n  const [scannerEnabled, setScannerEnabled] = React.useState(false);\r\n  const [loadingSpinner, setLoadingSpinner] = React.useState(false);\r\n  const [showSuccessMessage, setShowSuccessMessage] = React.useState(false);\r\n  const [showErrorMessage, setShowErrorMessage] = React.useState(false);\r\n  const [shortCodeInvalid, setShortCodeInvalid] = React.useState(false);\r\n  const [cardIDInvalid, setCardIDInvalid] = React.useState(false);\r\n  const [fieldErrorMsg, setFieldErrorMsg] = React.useState(\"\");\r\n\r\n  const cardIdInput = React.useRef();\r\n  const shortCode = React.useRef();\r\n\r\n  const handleKeyPress = (event) => {\r\n    resetModal();\r\n    if (event.key === \"Enter\") {\r\n      if (scannerEnabled) {\r\n        //if enter key prevent default\r\n        event.preventDefault();\r\n        console.log(cardIdInput.current.value);\r\n        if (cardIdInput.current.value.length === 10) {\r\n          //if input data length 10, run finduser\r\n          console.log(\"here\");\r\n          const currCardId = cardIdInput.current.value;\r\n          setCardID(currCardId);\r\n        }\r\n      } else {\r\n        onSubmit();\r\n        readOnly(true);\r\n      }\r\n    }\r\n  };\r\n\r\n  function resetModal() {\r\n    setShowSuccessMessage(false);\r\n    setShowErrorMessage(false);\r\n    setShortCodeInvalid(false);\r\n    setCardIDInvalid(false);\r\n    setReadOnly(false);\r\n  }\r\n\r\n  function onSubmit() {\r\n    const shortC = shortCode.current.value;\r\n    const card = cardIdInput.current.value;\r\n    if (!shortC && !card) {\r\n      setFieldErrorMsg(\"Please enter valid user details\");\r\n      setShortCodeInvalid(true);\r\n      setCardIDInvalid(true);\r\n    } else {\r\n      setReadOnly(true);\r\n      const requestOptions = {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: `Bearer ${sessionStorage.getItem(\"token\")}`,\r\n        },\r\n      };\r\n      if (card) {\r\n        requestOptions.body = JSON.stringify({\r\n          card_id: card,\r\n        });\r\n      } else if (shortC) {\r\n        requestOptions.body = JSON.stringify({\r\n          short_code: shortC,\r\n        });\r\n      }\r\n      fetch(\"/api/delUser\", requestOptions)\r\n        .then((response) => {\r\n          if (response.ok) {\r\n            setLoadingSpinner(false);\r\n            setShowSuccessMessage(true);\r\n            setTimeout(() => {\r\n              props.onHide();\r\n              resetModal();\r\n              setCardID(\"\");\r\n            }, 2000);\r\n          } else if (response.status === 403) {\r\n            console.log(\"Auth token bad\");\r\n            resetModal();\r\n            setCardID(\"\");\r\n            props.kick();\r\n            throw new Error(response.statusText);\r\n          } else if (response.status === 404) {\r\n            console.log(\"User not found\");\r\n            setFieldErrorMsg(\"User not found, try again\");\r\n            setCardID(\"\");\r\n            if (card) {\r\n              setCardIDInvalid(true);\r\n            } else if (shortC) {\r\n              setShortCodeInvalid(true);\r\n            }\r\n            throw new Error(response.statusText);\r\n          } else {\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n          setReadOnly(false);\r\n          setLoadingSpinner(false);\r\n          setShowErrorMessage(true);\r\n        });\r\n    }\r\n  }\r\n\r\n  React.useEffect(() => {\r\n    if (scannerEnabled) {\r\n      cardIdInput.current.value = \"\";\r\n      cardIdInput.current.focus();\r\n      setShowSuccessMessage(false);\r\n      setShowErrorMessage(false);\r\n      setShortCodeInvalid(false);\r\n      setCardIDInvalid(false);\r\n      setCardID(\"\");\r\n    }\r\n  }, [scannerEnabled]);\r\n\r\n  return (\r\n    <Modal\r\n      {...props}\r\n      size=\"lg\"\r\n      aria-labelledby=\"contained-modal-title-vcenter\"\r\n      centered\r\n    >\r\n      <input\r\n        className=\"scanner-input\"\r\n        ref={cardIdInput}\r\n        onKeyPress={handleKeyPress}\r\n        onBlur={() => setScannerEnabled(false)}\r\n      />\r\n      <Modal.Header closeButton>\r\n        <Modal.Title id=\"contained-modal-title-vcenter\">\r\n          Delete User\r\n        </Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        <Form.Group className=\"mb-3\">\r\n          <Form.Label>Short code</Form.Label>\r\n          <Form.Control\r\n            type=\"text\"\r\n            placeholder=\"e.g. ab1234\"\r\n            readOnly={readOnly ? true : false}\r\n            onKeyPress={handleKeyPress}\r\n            ref={shortCode}\r\n            isInvalid={shortCodeInvalid}\r\n          />\r\n          <Form.Control.Feedback type=\"invalid\">\r\n            {fieldErrorMsg}\r\n          </Form.Control.Feedback>\r\n        </Form.Group>\r\n        <h5 className=\"mb20\">OR</h5>\r\n        <Form.Group className=\"mb-3\">\r\n          <Form.Label>Card ID</Form.Label>\r\n          <Row>\r\n            <Col xs=\"auto\">\r\n              <Button\r\n                className=\"scanner-button\"\r\n                onClick={() => setScannerEnabled(true)}\r\n                variant=\"primary\"\r\n                disabled={scannerEnabled || readOnly ? true : false}\r\n              >\r\n                {scannerEnabled ? \"Scan card\" : \"Enable Scanner\"}\r\n              </Button>\r\n            </Col>\r\n            <Col>\r\n              <Form.Control\r\n                type=\"password\"\r\n                placeholder=\"\"\r\n                value={cardID}\r\n                readOnly\r\n                isInvalid={cardIDInvalid}\r\n              />\r\n              <Form.Control.Feedback type=\"invalid\">\r\n                {fieldErrorMsg}\r\n              </Form.Control.Feedback>\r\n            </Col>\r\n          </Row>\r\n        </Form.Group>\r\n      </Modal.Body>\r\n      <AdminModalFooter\r\n        loadingSpinner={loadingSpinner}\r\n        showErrorMessage={showErrorMessage}\r\n        showSuccessMessage={showSuccessMessage}\r\n        readOnly={readOnly}\r\n        onSubmit={onSubmit}\r\n        onHide={props.onHide}\r\n        cancel={\"Cancel\"}\r\n        actionButton={\"Delete User\"}\r\n        actionButtonRed={true}\r\n      />\r\n    </Modal>\r\n  );\r\n}\r\n\r\nfunction ChangePasswordModal(props) {\r\n  const [readOnly, setReadOnly] = React.useState(false);\r\n  const [loadingSpinner, setLoadingSpinner] = React.useState(false);\r\n  const [passwordError, setPasswordError] = React.useState(false);\r\n  const [showSuccessMessage, setShowSuccessMessage] = React.useState(false);\r\n  const [showErrorMessage, setShowErrorMessage] = React.useState(false);\r\n\r\n  const oldPassword = React.useRef();\r\n  const newPassword = React.useRef();\r\n\r\n  const handleKeyPress = (event) => {\r\n    resetModal();\r\n    if (event.key === \"Enter\") {\r\n      onSubmit();\r\n    }\r\n  };\r\n\r\n  function resetModal() {\r\n    setShowSuccessMessage(false);\r\n    setShowErrorMessage(false);\r\n    setPasswordError(false);\r\n  }\r\n\r\n  function onSubmit() {\r\n    setReadOnly(true);\r\n    const oldPass = oldPassword.current.value;\r\n    const newPass = newPassword.current.value;\r\n    const requestOptions = {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${sessionStorage.getItem(\"token\")}`,\r\n      },\r\n      body: JSON.stringify({ old_password: oldPass, new_password: newPass }),\r\n    };\r\n    fetch(\"/api/changepass\", requestOptions)\r\n      .then((response) => {\r\n        if (response.ok) {\r\n          setLoadingSpinner(false);\r\n          setShowSuccessMessage(true);\r\n          setTimeout(() => {\r\n            props.onHide();\r\n            setReadOnly(false);\r\n            setShowSuccessMessage(false);\r\n          }, 2000);\r\n        } else if (response.status === 401) {\r\n          console.log(\"Incorrect old password\");\r\n          setPasswordError(true);\r\n          throw new Error(response.statusText);\r\n        } else if (response.status === 403) {\r\n          console.log(\"Auth token bad\");\r\n          props.kick();\r\n          throw new Error(response.statusText);\r\n        } else {\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n        setReadOnly(false);\r\n        setLoadingSpinner(false);\r\n        setShowErrorMessage(true);\r\n      });\r\n  }\r\n\r\n  return (\r\n    <Modal\r\n      {...props}\r\n      size=\"lg\"\r\n      aria-labelledby=\"contained-modal-title-vcenter\"\r\n      centered\r\n    >\r\n      <Modal.Header closeButton>\r\n        <Modal.Title id=\"contained-modal-title-vcenter\">\r\n          Change Admin Password\r\n        </Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        <Form>\r\n          <Form.Group className=\"mb-3\">\r\n            <Form.Label>Old password</Form.Label>\r\n            <Form.Control\r\n              type=\"password\"\r\n              placeholder=\"\"\r\n              readOnly={readOnly ? true : false}\r\n              ref={oldPassword}\r\n              isInvalid={passwordError}\r\n              isValid={showSuccessMessage}\r\n              onKeyPress={handleKeyPress}\r\n            />\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              Incorrect old password, try again\r\n            </Form.Control.Feedback>\r\n          </Form.Group>\r\n          <Form.Group className=\"mb-3\">\r\n            <Form.Label>New password</Form.Label>\r\n            <Form.Control\r\n              type=\"password\"\r\n              placeholder=\"\"\r\n              readOnly={readOnly ? true : false}\r\n              ref={newPassword}\r\n              onKeyPress={handleKeyPress}\r\n              isValid={showSuccessMessage}\r\n            />\r\n          </Form.Group>\r\n        </Form>\r\n      </Modal.Body>\r\n      <AdminModalFooter\r\n        loadingSpinner={loadingSpinner}\r\n        showErrorMessage={showErrorMessage}\r\n        showSuccessMessage={showSuccessMessage}\r\n        readOnly={readOnly}\r\n        onSubmit={onSubmit}\r\n        onHide={props.onHide}\r\n        cancel={\"Cancel\"}\r\n        actionButton={\"Change Password\"}\r\n      />\r\n    </Modal>\r\n  );\r\n}\r\n\r\n// function CheckUserModal(props) {\r\n//   const [readOnly, setReadOnly] = React.useState(false);\r\n//   const [cardID, setCardID] = React.useState(\"\");\r\n//   const [scannerEnabled, setScannerEnabled] = React.useState(false);\r\n//   const [loadingSpinner, setLoadingSpinner] = React.useState(false);\r\n//   const [showSuccessMessage, setShowSuccessMessage] = React.useState(false);\r\n//   const [showErrorMessage, setShowErrorMessage] = React.useState(false);\r\n//   const [cardIDInvalid, setCardIDInvalid] = React.useState(false);\r\n//   const [cardIDInvalid, setCardIDInvalid] = React.useState(false);\r\n\r\n//   const cardIdInput = React.useRef();\r\n\r\n//   const handleKeyPress = (event) => {\r\n//     resetModal();\r\n//     if (event.key === \"Enter\") {\r\n//       if (scannerEnabled) {\r\n//         //if enter key prevent default\r\n//         event.preventDefault();\r\n//         console.log(cardIdInput.current.value);\r\n//         if (cardIdInput.current.value.length === 10) {\r\n//           //if input data length 10, run finduser\r\n//           console.log(\"here\");\r\n//           const currCardId = cardIdInput.current.value;\r\n//           setCardID(currCardId);\r\n//         }\r\n//       } else {\r\n//         onSubmit();\r\n//         readOnly(true);\r\n//       }\r\n//     }\r\n//   };\r\n\r\n//   function resetModal() {\r\n//     setShowSuccessMessage(false);\r\n//     setShowErrorMessage(false);\r\n//     setCardIDInvalid(false);\r\n//   }\r\n\r\n//   function onSubmit() {\r\n//     const card = cardIdInput.current.value;\r\n//     if (!card) {\r\n//       setCardIDInvalid(true);\r\n//     } else {\r\n//       setReadOnly(true);\r\n//       const requestOptions = {\r\n//         method: \"POST\",\r\n//         headers: {\r\n//           \"Content-Type\": \"application/json\",\r\n//           Authorization: `Bearer ${sessionStorage.getItem(\"token\")}`,\r\n//         },\r\n//         body: JSON.stringify({ card_id: card }),\r\n//       };\r\n//       fetch(\"/api/checkUser\", requestOptions)\r\n//         .then((response) => {\r\n//           if (response.ok) {\r\n//             setLoadingSpinner(false);\r\n//             setShowSuccessMessage(true);\r\n\r\n//           } else if (response.status === 403) {\r\n//             console.log(\"Auth token bad\");\r\n//             props.kick();\r\n//             throw new Error(response.statusText);\r\n//           } else {\r\n//           }\r\n//         })\r\n//         .catch((error) => {\r\n//           console.log(error);\r\n//           setReadOnly(false);\r\n//           setLoadingSpinner(false);\r\n//           setShowErrorMessage(true);\r\n//         });\r\n//     }\r\n//   }\r\n\r\n//   React.useEffect(() => {\r\n//     if (scannerEnabled) {\r\n//       cardIdInput.current.value = \"\";\r\n//       cardIdInput.current.focus();\r\n//     }\r\n//   }, [scannerEnabled]);\r\n\r\n//   return (\r\n//     <Modal\r\n//       {...props}\r\n//       size=\"lg\"\r\n//       aria-labelledby=\"contained-modal-title-vcenter\"\r\n//       centered\r\n//     >\r\n//       <input\r\n//         className=\"scanner-input\"\r\n//         ref={cardIdInput}\r\n//         onKeyPress={handleKeyPress}\r\n//         onBlur={() => setScannerEnabled(false)}\r\n//       />\r\n//       <Modal.Header closeButton>\r\n//         <Modal.Title id=\"contained-modal-title-vcenter\">Add User</Modal.Title>\r\n//       </Modal.Header>\r\n//       <Modal.Body>\r\n//         <Form.Group className=\"mb-3\">\r\n//           <Form.Label>Short code</Form.Label>\r\n//           <Form.Control\r\n//             type=\"text\"\r\n//             placeholder=\"e.g. ab1234\"\r\n//             readOnly={readOnly ? true : false}\r\n//             onKeyPress={handleKeyPress}\r\n//             ref={shortCode}\r\n//             isInvalid={shortCodeInvalid}\r\n//           />\r\n//           <Form.Control.Feedback type=\"invalid\">\r\n//             Please enter a short code.\r\n//           </Form.Control.Feedback>\r\n//         </Form.Group>\r\n//         <Form.Group className=\"mb-3\">\r\n//           <Form.Label>Card ID</Form.Label>\r\n//           <Row>\r\n//             <Col xs=\"auto\">\r\n//               <Button\r\n//                 className=\"scanner-button\"\r\n//                 onClick={() => setScannerEnabled(true)}\r\n//                 variant=\"primary\"\r\n//                 disabled={scannerEnabled || readOnly ? true : false}\r\n//               >\r\n//                 {scannerEnabled ? \"Scan card\" : \"Enable Scanner\"}\r\n//               </Button>\r\n//             </Col>\r\n//             <Col>\r\n//               <Form.Control\r\n//                 type=\"password\"\r\n//                 placeholder=\"\"\r\n//                 value={cardID}\r\n//                 readOnly\r\n//                 isInvalid={cardIDInvalid}\r\n//               />\r\n//               <Form.Control.Feedback type=\"invalid\">\r\n//                 Please add a card ID.\r\n//               </Form.Control.Feedback>\r\n//             </Col>\r\n//           </Row>\r\n//         </Form.Group>\r\n//       </Modal.Body>\r\n//       <AdminModalFooter\r\n//         loadingSpinner={loadingSpinner}\r\n//         showErrorMessage={showErrorMessage}\r\n//         showSuccessMessage={showSuccessMessage}\r\n//         readOnly={readOnly}\r\n//         onSubmit={onSubmit}\r\n//         onHide={props.onHide}\r\n//         cancel={\"Cancel\"}\r\n//         actionButton={\"Add User\"}\r\n//       />\r\n//     </Modal>\r\n//   );\r\n// }\r\n\r\nfunction AddUserModal(props) {\r\n  const [readOnly, setReadOnly] = React.useState(false);\r\n  const [cardID, setCardID] = React.useState(\"\");\r\n  const [scannerEnabled, setScannerEnabled] = React.useState(false);\r\n  const [loadingSpinner, setLoadingSpinner] = React.useState(false);\r\n  const [showSuccessMessage, setShowSuccessMessage] = React.useState(false);\r\n  const [showErrorMessage, setShowErrorMessage] = React.useState(false);\r\n  const [shortCodeInvalid, setShortCodeInvalid] = React.useState(false);\r\n  const [cardIDInvalid, setCardIDInvalid] = React.useState(false);\r\n\r\n  const cardIdInput = React.useRef();\r\n  const shortCode = React.useRef();\r\n\r\n  const handleKeyPress = (event) => {\r\n    resetModal();\r\n    if (event.key === \"Enter\") {\r\n      if (scannerEnabled) {\r\n        //if enter key prevent default\r\n        event.preventDefault();\r\n        console.log(cardIdInput.current.value);\r\n        if (cardIdInput.current.value.length === 10) {\r\n          //if input data length 10, run finduser\r\n          console.log(\"here\");\r\n          const currCardId = cardIdInput.current.value;\r\n          setCardID(currCardId);\r\n        }\r\n      } else {\r\n        onSubmit();\r\n        readOnly(true);\r\n      }\r\n    }\r\n  };\r\n\r\n  function resetModal() {\r\n    setShowSuccessMessage(false);\r\n    setShowErrorMessage(false);\r\n    setShortCodeInvalid(false);\r\n    setCardIDInvalid(false);\r\n    setReadOnly(false);\r\n  }\r\n\r\n  function onSubmit() {\r\n    const shortC = shortCode.current.value;\r\n    const card = cardIdInput.current.value;\r\n    if (!shortC) {\r\n      setShortCodeInvalid(true);\r\n    } else if (!card) {\r\n      setCardIDInvalid(true);\r\n    } else {\r\n      setReadOnly(true);\r\n      const requestOptions = {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: `Bearer ${sessionStorage.getItem(\"token\")}`,\r\n        },\r\n        body: JSON.stringify({ short_code: shortC, card_id: card }),\r\n      };\r\n      fetch(\"/api/addUser\", requestOptions)\r\n        .then((response) => {\r\n          if (response.ok) {\r\n            setLoadingSpinner(false);\r\n            setShowSuccessMessage(true);\r\n            setTimeout(() => {\r\n              props.onHide();\r\n              setCardID(\"\");\r\n              resetModal();\r\n            }, 2000);\r\n          } else if (response.status === 403) {\r\n            console.log(\"Auth token bad\");\r\n            props.kick();\r\n            throw new Error(response.statusText);\r\n          } else {\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n          setReadOnly(false);\r\n          setLoadingSpinner(false);\r\n          setShowErrorMessage(true);\r\n        });\r\n    }\r\n  }\r\n\r\n  React.useEffect(() => {\r\n    if (scannerEnabled) {\r\n      cardIdInput.current.value = \"\";\r\n      cardIdInput.current.focus();\r\n      resetModal();\r\n      setCardID(\"\");\r\n    }\r\n  }, [scannerEnabled]);\r\n\r\n  return (\r\n    <Modal\r\n      {...props}\r\n      size=\"lg\"\r\n      aria-labelledby=\"contained-modal-title-vcenter\"\r\n      centered\r\n    >\r\n      <input\r\n        className=\"scanner-input\"\r\n        ref={cardIdInput}\r\n        onKeyPress={handleKeyPress}\r\n        onBlur={() => setScannerEnabled(false)}\r\n      />\r\n      <Modal.Header closeButton>\r\n        <Modal.Title id=\"contained-modal-title-vcenter\">Add User</Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        <Form.Group className=\"mb-3\">\r\n          <Form.Label>Short code</Form.Label>\r\n          <Form.Control\r\n            type=\"text\"\r\n            placeholder=\"e.g. ab1234\"\r\n            readOnly={readOnly ? true : false}\r\n            onKeyPress={handleKeyPress}\r\n            ref={shortCode}\r\n            isInvalid={shortCodeInvalid}\r\n          />\r\n          <Form.Control.Feedback type=\"invalid\">\r\n            Please enter a short code.\r\n          </Form.Control.Feedback>\r\n        </Form.Group>\r\n        <Form.Group className=\"mb-3\">\r\n          <Form.Label>Card ID</Form.Label>\r\n          <Row>\r\n            <Col xs=\"auto\">\r\n              <Button\r\n                className=\"scanner-button\"\r\n                onClick={() => setScannerEnabled(true)}\r\n                variant=\"primary\"\r\n                disabled={scannerEnabled || readOnly ? true : false}\r\n              >\r\n                {scannerEnabled ? \"Scan card\" : \"Enable Scanner\"}\r\n              </Button>\r\n            </Col>\r\n            <Col>\r\n              <Form.Control\r\n                type=\"password\"\r\n                placeholder=\"\"\r\n                value={cardID}\r\n                readOnly\r\n                isInvalid={cardIDInvalid}\r\n              />\r\n              <Form.Control.Feedback type=\"invalid\">\r\n                Please add a card ID.\r\n              </Form.Control.Feedback>\r\n            </Col>\r\n          </Row>\r\n        </Form.Group>\r\n      </Modal.Body>\r\n      <AdminModalFooter\r\n        loadingSpinner={loadingSpinner}\r\n        showErrorMessage={showErrorMessage}\r\n        showSuccessMessage={showSuccessMessage}\r\n        readOnly={readOnly}\r\n        onSubmit={onSubmit}\r\n        onHide={props.onHide}\r\n        cancel={\"Cancel\"}\r\n        actionButton={\"Add User\"}\r\n      />\r\n    </Modal>\r\n  );\r\n}\r\n\r\nfunction AdminModalFooter(props) {\r\n  return (\r\n    <Modal.Footer>\r\n      {props.loadingSpinner ? (\r\n        <Col xs=\"auto\">\r\n          <Spinner className=\"mra\" animation=\"border\" />\r\n        </Col>\r\n      ) : (\r\n        <></>\r\n      )}\r\n      {props.showSuccessMessage ? (\r\n        <Col xs=\"auto\">\r\n          <div className=\"mra success-message\">Success</div>\r\n        </Col>\r\n      ) : (\r\n        <></>\r\n      )}\r\n      {props.showErrorMessage ? (\r\n        <Col xs=\"auto\">\r\n          <div className=\"mra error-message\">Error</div>\r\n        </Col>\r\n      ) : (\r\n        <></>\r\n      )}\r\n      <Button variant=\"secondary\" onClick={props.onHide} className=\"mla\">\r\n        {props.cancel}\r\n      </Button>\r\n      <Button\r\n        variant={props.actionButtonRed ? \"danger\" : \"primary\"}\r\n        type=\"submit\"\r\n        onClick={() => props.onSubmit()}\r\n        disabled={props.readOnly ? true : false}\r\n      >\r\n        {props.actionButton}\r\n      </Button>\r\n    </Modal.Footer>\r\n  );\r\n}\r\n\r\nfunction Admin(props) {\r\n  const [addUserModalShow, setAddUserModalShow] = React.useState(false);\r\n  const [delUserModalShow, setDelUserModalShow] = React.useState(false);\r\n  const [changePassModalShow, setChangePassModalShow] = React.useState(false);\r\n  const [checkUserModalShow, setCheckUserModalShow] = React.useState(false);\r\n  const [loggedIn, setLoggedIn] = React.useState(true);\r\n  const [loginReadOnly, setLoginReadOnly] = React.useState(false);\r\n  const [passwordError, setPasswordError] = React.useState(false);\r\n  const [passwordErrorMessage, setPasswordErrorMessage] = React.useState(\"\");\r\n  const [showPasswordSpinner, setShowPasswordSpinner] = React.useState(false);\r\n  const [showKickedMessage, setShowKickedMessage] = React.useState(false);\r\n\r\n  const loginPassword = React.useRef();\r\n\r\n  function onLoginButton() {\r\n    const password = loginPassword.current.value;\r\n    setShowPasswordSpinner(true);\r\n    setLoginReadOnly(true);\r\n    const requestOptions = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ password: password }),\r\n    };\r\n    fetch(\"/api/login\", requestOptions)\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        setShowPasswordSpinner(false);\r\n        sessionStorage.setItem(\"token\", data.token);\r\n        setLoginReadOnly(false);\r\n        setLoggedIn(true);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n        setShowPasswordSpinner(false);\r\n        setLoginReadOnly(false);\r\n        setPasswordError(true);\r\n        setPasswordErrorMessage(\"Incorrect password, try again\");\r\n      });\r\n  }\r\n\r\n  function onLogoutButton() {\r\n    sessionStorage.removeItem(\"token\");\r\n    setLoggedIn(false);\r\n  }\r\n\r\n  function onKickedOut() {\r\n    sessionStorage.removeItem(\"token\");\r\n    setLoggedIn(false);\r\n    setShowKickedMessage(true);\r\n  }\r\n\r\n  function handleLoginEnter(event) {\r\n    setPasswordError(false);\r\n    if (event.key === \"Enter\") {\r\n      onLoginButton();\r\n    }\r\n  }\r\n\r\n  React.useEffect(() => {\r\n    if (sessionStorage.getItem(\"token\")) {\r\n      setLoggedIn(true);\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <Navbar bg=\"light\">\r\n        <Container>\r\n          <Navbar.Brand href=\"\">AceX Admin</Navbar.Brand>\r\n          {loggedIn ? (\r\n            <Nav.Link onClick={() => onLogoutButton()}>Logout</Nav.Link>\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </Container>\r\n      </Navbar>\r\n      {loggedIn ? (\r\n        <Container>\r\n          <h1>Welcome</h1>\r\n          <Row className=\"justify-content-md-left mt50\">\r\n            <Col xs={6} md={4} xl={3}>\r\n              <div\r\n                onClick={() => setAddUserModalShow(true)}\r\n                className=\"admin-card\"\r\n              >\r\n                <h2 className=\"mta\">Add user</h2>\r\n              </div>\r\n            </Col>\r\n            <Col xs={6} md={4} xl={3}>\r\n              <div\r\n                onClick={() => setDelUserModalShow(true)}\r\n                className=\"admin-card\"\r\n              >\r\n                <h2 className=\"mta\">Delete user</h2>\r\n              </div>\r\n            </Col>\r\n            <Col xs={6} md={4} xl={3}>\r\n              <div\r\n                onClick={() => setChangePassModalShow(true)}\r\n                className=\"admin-card\"\r\n              >\r\n                <h2 className=\"mta\">Change password</h2>\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n          <AddUserModal\r\n            show={addUserModalShow}\r\n            onHide={() => setAddUserModalShow(false)}\r\n            kick={() => onKickedOut()}\r\n          />\r\n          <DeleteUserModal\r\n            show={delUserModalShow}\r\n            onHide={() => setDelUserModalShow(false)}\r\n            kick={() => onKickedOut()}\r\n          />\r\n          <ChangePasswordModal\r\n            show={changePassModalShow}\r\n            onHide={() => setChangePassModalShow(false)}\r\n            kick={() => onKickedOut()}\r\n          />\r\n          {/* <CheckUserModal\r\n            show={checkUserModalShow}\r\n            onHide={() => setCheckUserModalShow(false)}\r\n            kick={() => onKickedOut()}\r\n          /> */}\r\n        </Container>\r\n      ) : (\r\n        <Container>\r\n          <h1>Please enter the admin password</h1>\r\n          <Form.Group className=\"mt50 mb-3\">\r\n            {showKickedMessage ? (\r\n              <div className=\"mb10 error-message\">\r\n                Session expired, please log in again\r\n              </div>\r\n            ) : (\r\n              <> </>\r\n            )}\r\n            <Row>\r\n              <Col xs=\"9\" md=\"4\">\r\n                <Form.Control\r\n                  type=\"password\"\r\n                  placeholder=\"\"\r\n                  readOnly={loginReadOnly ? true : false}\r\n                  ref={loginPassword}\r\n                  onKeyPress={handleLoginEnter}\r\n                  isInvalid={passwordError}\r\n                />\r\n                <Form.Control.Feedback type=\"invalid\">\r\n                  {passwordErrorMessage}\r\n                </Form.Control.Feedback>\r\n              </Col>\r\n              <Col xs=\"auto\">\r\n                <Button\r\n                  onClick={() => onLoginButton(true)}\r\n                  type=\"submit\"\r\n                  disabled={loginReadOnly ? true : false}\r\n                >\r\n                  Login\r\n                </Button>\r\n              </Col>\r\n              {showPasswordSpinner ? (\r\n                <Col xs=\"auto\">\r\n                  <Spinner animation=\"border\" />\r\n                </Col>\r\n              ) : (\r\n                <></>\r\n              )}\r\n            </Row>\r\n          </Form.Group>\r\n        </Container>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Admin;\r\n","// client/src/App.js\n\nimport React from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport { BrowserRouter, Route, Routes } from \"react-router-dom\";\n\nimport Dashboard from \"./pages/Dashboard\";\nimport Admin from \"./pages/Admin\";\n\nimport { Container } from \"react-bootstrap\";\n\nfunction App() {\n  const [data, setData] = React.useState(null);\n\n  return (\n    <BrowserRouter className=\"App\">\n        <Routes>\n          <Route path=\"/admin\" element={<Admin />} />\n          <Route path=\"/\" element={<Dashboard />} />\n        </Routes>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}