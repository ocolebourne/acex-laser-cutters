{"version":3,"sources":["logo.svg","pages/Dashboard.js","pages/Admin.js","App.js","reportWebVitals.js","index.js"],"names":["Dashboard","props","Navbar","bg","Container","Brand","href","Nav","Link","Row","Col","DeleteUserModal","React","useState","readOnly","useRef","Modal","size","centered","Header","closeButton","Title","id","Body","Form","Group","className","Label","Control","type","placeholder","Footer","Button","variant","onClick","onHide","ChangePasswordModal","setReadOnly","loadingSpinner","setLoadingSpinner","passwordError","setPasswordError","showSuccessMessage","setShowSuccessMessage","showErrorMessage","setShowErrorMessage","oldPassword","newPassword","handleKeyPress","event","key","onSubmit","oldPass","current","value","newPass","requestOptions","method","headers","Authorization","sessionStorage","getItem","body","JSON","stringify","old_password","new_password","fetch","then","response","ok","setTimeout","status","console","log","Error","statusText","kick","catch","error","ref","isInvalid","isValid","onKeyPress","Feedback","AdminModalFooter","cancel","actionButton","AddUserModal","cardID","setCardID","scannerEnabled","setScannerEnabled","shortCodeInvalid","setShortCodeInvalid","cardIDInvalid","setCardIDInvalid","cardIdInput","shortCode","preventDefault","length","currCardId","shortC","card","short_code","card_id","useEffect","focus","onBlur","xs","disabled","Spinner","animation","Admin","addUserModalShow","setAddUserModalShow","delUserModalShow","setDelUserModalShow","changePassModalShow","setChangePassModalShow","loggedIn","setLoggedIn","loginReadOnly","setLoginReadOnly","passwordErrorMessage","setPasswordErrorMessage","showPasswordSpinner","setShowPasswordSpinner","showKickedMessage","setShowKickedMessage","loginPassword","onLoginButton","password","json","data","setItem","token","onKickedOut","removeItem","md","xl","show","App","path","element","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yMAAe,I,mECwBAA,MAnBf,SAAmBC,GACjB,OACE,gCACE,cAACC,EAAA,EAAD,CAAQC,GAAG,QAAX,SACE,eAACC,EAAA,EAAD,WACE,cAACF,EAAA,EAAOG,MAAR,CAAcC,KAAK,GAAnB,wBACA,cAACC,EAAA,EAAIC,KAAL,CAAUF,KAAK,QAAf,yBAGJ,eAACF,EAAA,EAAD,WACE,yCACA,cAACK,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,a,uCCgDV,SAASC,EAAgBV,GACvB,MAAgCW,IAAMC,UAAS,GAA/C,mBAAOC,EAAP,KACA,GADA,KAC4CF,IAAMC,UAAS,IAA3D,6BAEoBD,IAAMG,SACNH,IAAMG,SAY1B,OACE,eAACC,EAAA,EAAD,2BACMf,GADN,IAEEgB,KAAK,KACL,kBAAgB,gCAChBC,UAAQ,EAJV,UAME,cAACF,EAAA,EAAMG,OAAP,CAAcC,aAAW,EAAzB,SACE,cAACJ,EAAA,EAAMK,MAAP,CAAaC,GAAG,gCAAhB,wBAEF,cAACN,EAAA,EAAMO,KAAP,UACE,eAACC,EAAA,EAAKC,MAAN,CAAYC,UAAU,OAAtB,UACE,cAACF,EAAA,EAAKG,MAAN,yBACA,cAACH,EAAA,EAAKI,QAAN,CACEC,KAAK,OACLC,YAAY,cACZhB,WAAUA,SAIhB,eAACE,EAAA,EAAMe,OAAP,WACE,cAACC,EAAA,EAAD,CAAQC,QAAQ,UAAUJ,KAAK,SAA/B,6BAGA,cAACG,EAAA,EAAD,CAAQC,QAAQ,YAAYC,QAASjC,EAAMkC,OAA3C,2BAQR,SAASC,EAAoBnC,GAC3B,MAAgCW,IAAMC,UAAS,GAA/C,mBAAOC,EAAP,KAAiBuB,EAAjB,KACA,EAA4CzB,IAAMC,UAAS,GAA3D,mBAAOyB,EAAP,KAAuBC,EAAvB,KACA,EAA0C3B,IAAMC,UAAS,GAAzD,mBAAO2B,EAAP,KAAsBC,EAAtB,KACA,EAAoD7B,IAAMC,UAAS,GAAnE,mBAAO6B,EAAP,KAA2BC,EAA3B,KACA,EAAgD/B,IAAMC,UAAS,GAA/D,mBAAO+B,EAAP,KAAyBC,EAAzB,KAEMC,EAAclC,IAAMG,SACpBgC,EAAcnC,IAAMG,SAEpBiC,EAAiB,SAACC,GAQtBN,GAAsB,GACtBE,GAAoB,GACpBJ,GAAiB,GARC,UAAdQ,EAAMC,KACRC,KAUJ,SAASA,IACPd,GAAY,GACZ,IAAMe,EAAUN,EAAYO,QAAQC,MAC9BC,EAAUR,EAAYM,QAAQC,MAC9BE,EAAiB,CACrBC,OAAQ,OACRC,QAAS,CACP,eAAgB,mBAChBC,cAAc,UAAD,OAAYC,eAAeC,QAAQ,WAElDC,KAAMC,KAAKC,UAAU,CAAEC,aAAcb,EAASc,aAAcX,KAE9DY,MAAM,kBAAmBX,GACtBY,MAAK,SAACC,GACL,GAAIA,EAASC,GACX/B,GAAkB,GAClBI,GAAsB,GACtB4B,YAAW,WACTtE,EAAMkC,SACNE,GAAY,GACZM,GAAsB,KACrB,SACE,IAAuB,KAAnB0B,EAASG,OAGlB,MAFAC,QAAQC,IAAI,0BACZjC,GAAiB,GACX,IAAIkC,MAAMN,EAASO,YACpB,GAAuB,KAAnBP,EAASG,OAGlB,MAFAC,QAAQC,IAAI,kBACZzE,EAAM4E,OACA,IAAIF,MAAMN,EAASO,gBAI5BE,OAAM,SAACC,GACNN,QAAQC,IAAIK,GACZ1C,GAAY,GACZE,GAAkB,GAClBM,GAAoB,MAI1B,OACE,eAAC7B,EAAA,EAAD,2BACMf,GADN,IAEEgB,KAAK,KACL,kBAAgB,gCAChBC,UAAQ,EAJV,UAME,cAACF,EAAA,EAAMG,OAAP,CAAcC,aAAW,EAAzB,SACE,cAACJ,EAAA,EAAMK,MAAP,CAAaC,GAAG,gCAAhB,qCAIF,cAACN,EAAA,EAAMO,KAAP,UACE,eAACC,EAAA,EAAD,WACE,eAACA,EAAA,EAAKC,MAAN,CAAYC,UAAU,OAAtB,UACE,cAACF,EAAA,EAAKG,MAAN,2BACA,cAACH,EAAA,EAAKI,QAAN,CACEC,KAAK,WACLC,YAAY,GACZhB,WAAUA,EACVkE,IAAKlC,EACLmC,UAAWzC,EACX0C,QAASxC,EACTyC,WAAYnC,IAEd,cAACxB,EAAA,EAAKI,QAAQwD,SAAd,CAAuBvD,KAAK,UAA5B,kDAIF,eAACL,EAAA,EAAKC,MAAN,CAAYC,UAAU,OAAtB,UACE,cAACF,EAAA,EAAKG,MAAN,2BACA,cAACH,EAAA,EAAKI,QAAN,CACEC,KAAK,WACLC,YAAY,GACZhB,WAAUA,EACVkE,IAAKjC,EACLoC,WAAYnC,EACZkC,QAASxC,YAKjB,cAAC2C,EAAD,CACE/C,eAAgBA,EAChBM,iBAAkBA,EAClBF,mBAAoBA,EACpB5B,SAAUA,EACVqC,SAAUA,EACVhB,OAAQlC,EAAMkC,OACdmD,OAAQ,SACRC,aAAc,wBAMtB,SAASC,EAAavF,GACpB,MAAgCW,IAAMC,UAAS,GAA/C,mBAAOC,EAAP,KAAiBuB,EAAjB,KACA,EAA4BzB,IAAMC,SAAS,IAA3C,mBAAO4E,EAAP,KAAeC,EAAf,KACA,EAA4C9E,IAAMC,UAAS,GAA3D,mBAAO8E,EAAP,KAAuBC,EAAvB,KACA,EAA4ChF,IAAMC,UAAS,GAA3D,mBAAOyB,EAAP,KAAuBC,EAAvB,KACA,EAAoD3B,IAAMC,UAAS,GAAnE,mBAAO6B,EAAP,KAA2BC,EAA3B,KACA,EAAgD/B,IAAMC,UAAS,GAA/D,mBAAO+B,EAAP,KAAyBC,EAAzB,KACA,EAAgDjC,IAAMC,UAAS,GAA/D,mBAAOgF,EAAP,KAAyBC,EAAzB,KACA,EAA0ClF,IAAMC,UAAS,GAAzD,mBAAOkF,EAAP,KAAsBC,EAAtB,KAEMC,EAAcrF,IAAMG,SACpBmF,EAAYtF,IAAMG,SAElBiC,EAAiB,SAACC,GAEtB,GAmBAN,GAAsB,GACtBE,GAAoB,GACpBiD,GAAoB,GACpBE,GAAiB,GAtBC,UAAd/C,EAAMC,IACR,GAAIyC,GAIF,GAFA1C,EAAMkD,iBACN1B,QAAQC,IAAIuB,EAAY5C,QAAQC,OACS,KAArC2C,EAAY5C,QAAQC,MAAM8C,OAAe,CAE3C3B,QAAQC,IAAI,QACZ,IAAM2B,EAAaJ,EAAY5C,QAAQC,MACvCoC,EAAUW,SAGZlD,IACArC,GAAS,IAYf,SAASqC,IACP,IAAMmD,EAASJ,EAAU7C,QAAQC,MAC3BiD,EAAON,EAAY5C,QAAQC,MACjC,GAAKgD,EAEE,GAAKC,EAEL,CACLlE,GAAY,GACZ,IAAMmB,EAAiB,CACrBC,OAAQ,OACRC,QAAS,CACP,eAAgB,mBAChBC,cAAc,UAAD,OAAYC,eAAeC,QAAQ,WAElDC,KAAMC,KAAKC,UAAU,CAAEwC,WAAYF,EAAQG,QAASF,KAEtDpC,MAAM,eAAgBX,GACnBY,MAAK,SAACC,GACL,GAAIA,EAASC,GACX/B,GAAkB,GAClBI,GAAsB,GACtB4B,YAAW,WACTtE,EAAMkC,SACNE,GAAY,GACZM,GAAsB,GACtB+C,EAAU,MACT,UACE,GAAuB,KAAnBrB,EAASG,OAGlB,MAFAC,QAAQC,IAAI,kBACZzE,EAAM4E,OACA,IAAIF,MAAMN,EAASO,eAI5BE,OAAM,SAACC,GACNN,QAAQC,IAAIK,GACZ1C,GAAY,GACZE,GAAkB,GAClBM,GAAoB,WAjCxBmD,GAAiB,QAFjBF,GAAoB,GA+CxB,OAPAlF,IAAM8F,WAAU,WACVf,IACFM,EAAY5C,QAAQC,MAAQ,GAC5B2C,EAAY5C,QAAQsD,WAErB,CAAChB,IAGF,eAAC3E,EAAA,EAAD,2BACMf,GADN,IAEEgB,KAAK,KACL,kBAAgB,gCAChBC,UAAQ,EAJV,UAME,uBACEQ,UAAU,gBACVsD,IAAKiB,EACLd,WAAYnC,EACZ4D,OAAQ,kBAAMhB,GAAkB,MAElC,cAAC5E,EAAA,EAAMG,OAAP,CAAcC,aAAW,EAAzB,SACE,cAACJ,EAAA,EAAMK,MAAP,CAAaC,GAAG,gCAAhB,wBAEF,eAACN,EAAA,EAAMO,KAAP,WACE,eAACC,EAAA,EAAKC,MAAN,CAAYC,UAAU,OAAtB,UACE,cAACF,EAAA,EAAKG,MAAN,yBACA,cAACH,EAAA,EAAKI,QAAN,CACEC,KAAK,OACLC,YAAY,cACZhB,WAAUA,EACVqE,WAAYnC,EACZgC,IAAKkB,EACLjB,UAAWY,IAEb,cAACrE,EAAA,EAAKI,QAAQwD,SAAd,CAAuBvD,KAAK,UAA5B,2CAIF,eAACL,EAAA,EAAKC,MAAN,CAAYC,UAAU,OAAtB,UACE,cAACF,EAAA,EAAKG,MAAN,sBACA,eAAClB,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAKmG,GAAG,OAAR,SACE,cAAC7E,EAAA,EAAD,CACEN,UAAU,iBACVQ,QAAS,kBAAM0D,GAAkB,IACjC3D,QAAQ,UACR6E,YAAUnB,IAAkB7E,GAJ9B,SAMG6E,EAAiB,YAAc,qBAGpC,eAACjF,EAAA,EAAD,WACE,cAACc,EAAA,EAAKI,QAAN,CACEC,KAAK,WACLC,YAAY,GACZwB,MAAOmC,EACP3E,UAAQ,EACRmE,UAAWc,IAEb,cAACvE,EAAA,EAAKI,QAAQwD,SAAd,CAAuBvD,KAAK,UAA5B,+CAOR,cAACwD,EAAD,CACE/C,eAAgBA,EAChBM,iBAAkBA,EAClBF,mBAAoBA,EACpB5B,SAAUA,EACVqC,SAAUA,EACVhB,OAAQlC,EAAMkC,OACdmD,OAAQ,SACRC,aAAc,iBAMtB,SAASF,EAAiBpF,GACxB,OACE,eAACe,EAAA,EAAMe,OAAP,WACG9B,EAAMqC,eACL,cAAC5B,EAAA,EAAD,CAAKmG,GAAG,OAAR,SACE,cAACE,EAAA,EAAD,CAASrF,UAAU,MAAMsF,UAAU,aAGrC,6BAED/G,EAAMyC,mBACL,cAAChC,EAAA,EAAD,CAAKmG,GAAG,OAAR,SACE,qBAAKnF,UAAU,sBAAf,uBAGF,6BAEDzB,EAAM2C,iBACL,cAAClC,EAAA,EAAD,CAAKmG,GAAG,OAAR,SACE,qBAAKnF,UAAU,oBAAf,qBAGF,6BAEF,cAACM,EAAA,EAAD,CAAQC,QAAQ,YAAYC,QAASjC,EAAMkC,OAAQT,UAAU,MAA7D,SACGzB,EAAMqF,SAET,cAACtD,EAAA,EAAD,CACEC,QAAQ,UACRJ,KAAK,SACLK,QAAS,kBAAMjC,EAAMkD,YACrB2D,WAAU7G,EAAMa,SAJlB,SAMGb,EAAMsF,kBA+KA0B,MAzKf,SAAehH,GACb,MAAgDW,IAAMC,UAAS,GAA/D,mBAAOqG,EAAP,KAAyBC,EAAzB,KACA,EAAgDvG,IAAMC,UAAS,GAA/D,mBAAOuG,EAAP,KAAyBC,EAAzB,KACA,EAAsDzG,IAAMC,UAAS,GAArE,mBAAOyG,EAAP,KAA4BC,EAA5B,KACA,EAAgC3G,IAAMC,UAAS,GAA/C,mBAAO2G,EAAP,KAAiBC,EAAjB,KACA,EAA0C7G,IAAMC,UAAS,GAAzD,mBAAO6G,EAAP,KAAsBC,EAAtB,KACA,EAA0C/G,IAAMC,UAAS,GAAzD,mBAAO2B,EAAP,KAAsBC,EAAtB,KACA,EAAwD7B,IAAMC,SAAS,IAAvE,mBAAO+G,EAAP,KAA6BC,EAA7B,KACA,EAAsDjH,IAAMC,UAAS,GAArE,mBAAOiH,EAAP,KAA4BC,EAA5B,KACA,EAAkDnH,IAAMC,UAAS,GAAjE,mBAAOmH,EAAP,KAA0BC,EAA1B,KAEMC,EAAgBtH,IAAMG,SAE5B,SAASoH,IACP,IAAMC,EAAWF,EAAc7E,QAAQC,MACvCyE,GAAuB,GACvBJ,GAAiB,GACjB,IAAMnE,EAAiB,CACrBC,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3BI,KAAMC,KAAKC,UAAU,CAAEoE,SAAUA,KAEnCjE,MAAM,aAAcX,GACjBY,MAAK,SAACC,GAAD,OAAcA,EAASgE,UAC5BjE,MAAK,SAACkE,GACLP,GAAuB,GACvBnE,eAAe2E,QAAQ,QAASD,EAAKE,OACrCb,GAAiB,GACjBF,GAAY,MAEb3C,OAAM,SAACC,GACNN,QAAQC,IAAIK,GACZgD,GAAuB,GACvBJ,GAAiB,GACjBlF,GAAiB,GACjBoF,EAAwB,oCAS9B,SAASY,IACP7E,eAAe8E,WAAW,SAC1BjB,GAAY,GACZQ,GAAqB,GAgBvB,OANArH,IAAM8F,WAAU,WACV9C,eAAeC,QAAQ,UACzB4D,GAAY,KAEb,IAGD,gCACE,cAACvH,EAAA,EAAD,CAAQC,GAAG,QAAX,SACE,eAACC,EAAA,EAAD,WACE,cAACF,EAAA,EAAOG,MAAR,CAAcC,KAAK,GAAnB,wBACCkH,EACC,cAACjH,EAAA,EAAIC,KAAL,CAAU0B,QAAS,kBA7B3B0B,eAAe8E,WAAW,cAC1BjB,GAAY,IA4BJ,oBAEA,kCAILD,EACC,eAACpH,EAAA,EAAD,WACE,yCACA,eAACK,EAAA,EAAD,CAAKiB,UAAU,+BAAf,UACE,cAAChB,EAAA,EAAD,CAAKmG,GAAI,EAAG8B,GAAI,EAAGC,GAAI,EAAvB,SACE,qBACE1G,QAAS,kBAAMiF,GAAoB,IACnCzF,UAAU,aAFZ,SAIE,oBAAIA,UAAU,MAAd,0BAGJ,cAAChB,EAAA,EAAD,CAAKmG,GAAI,EAAG8B,GAAI,EAAGC,GAAI,EAAvB,SACE,qBACE1G,QAAS,kBAAMmF,GAAoB,IACnC3F,UAAU,aAFZ,SAIE,oBAAIA,UAAU,MAAd,6BAGJ,cAAChB,EAAA,EAAD,CAAKmG,GAAI,EAAG8B,GAAI,EAAGC,GAAI,EAAvB,SACE,qBACE1G,QAAS,kBAAMqF,GAAuB,IACtC7F,UAAU,aAFZ,SAIE,oBAAIA,UAAU,MAAd,oCAIN,cAAC8D,EAAD,CACEqD,KAAM3B,EACN/E,OAAQ,kBAAMgF,GAAoB,IAClCtC,KAAM,kBAAM4D,OAEd,cAAC9H,EAAD,CACEkI,KAAMzB,EACNjF,OAAQ,kBAAMkF,GAAoB,IAClCxC,KAAM,kBAAM4D,OAEd,cAACrG,EAAD,CACEyG,KAAMvB,EACNnF,OAAQ,kBAAMoF,GAAuB,IACrC1C,KAAM,kBAAM4D,UAIhB,eAACrI,EAAA,EAAD,WACE,iEACA,eAACoB,EAAA,EAAKC,MAAN,CAAYC,UAAU,YAAtB,UACGsG,EACC,qBAAKtG,UAAU,qBAAf,kDAIA,yCAEF,eAACjB,EAAA,EAAD,WACE,eAACC,EAAA,EAAD,CAAKmG,GAAG,IAAI8B,GAAG,IAAf,UACE,cAACnH,EAAA,EAAKI,QAAN,CACEC,KAAK,WACLC,YAAY,GACZhB,WAAU4G,EACV1C,IAAKkD,EACL/C,WAxFhB,SAA0BlC,GACxBR,GAAiB,GACC,UAAdQ,EAAMC,KACRiF,KAsFYlD,UAAWzC,IAEb,cAAChB,EAAA,EAAKI,QAAQwD,SAAd,CAAuBvD,KAAK,UAA5B,SACG+F,OAGL,cAAClH,EAAA,EAAD,CAAKmG,GAAG,OAAR,SACE,cAAC7E,EAAA,EAAD,CACEE,QAAS,kBAAMiG,KACftG,KAAK,SACLiF,WAAUY,EAHZ,qBAQDI,EACC,cAACpH,EAAA,EAAD,CAAKmG,GAAG,OAAR,SACE,cAACE,EAAA,EAAD,CAASC,UAAU,aAGrB,0CC3jBD8B,MAbf,WACE,MAAwBlI,IAAMC,SAAS,MAAvC,mBAEA,OAFA,UAGE,cAAC,IAAD,CAAea,UAAU,MAAzB,SACI,eAAC,IAAD,WACE,cAAC,IAAD,CAAOqH,KAAK,SAASC,QAAS,cAAC,EAAD,MAC9B,cAAC,IAAD,CAAOD,KAAK,IAAIC,QAAS,cAAC,EAAD,YCPpBC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB/E,MAAK,YAAkD,IAA/CgF,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.4fa52660.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from \"react\";\r\n\r\nimport \"../index.css\";\r\nimport { Navbar, Container, Nav, Column, Row, Col } from \"react-bootstrap\";\r\n\r\nfunction Dashboard(props) {\r\n  return (\r\n    <div>\r\n      <Navbar bg=\"light\">\r\n        <Container>\r\n          <Navbar.Brand href=\"\">AceX Admin</Navbar.Brand>\r\n          <Nav.Link href=\"#link\">Logout</Nav.Link>\r\n        </Container>\r\n      </Navbar>\r\n      <Container>\r\n        <h1>Welcome</h1>\r\n        <Row>\r\n          <Col></Col>\r\n        </Row>\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Dashboard;\r\n","import React from \"react\";\r\nimport { useCookies } from \"react-cookie\";\r\n\r\nimport \"../index.css\";\r\nimport {\r\n  Navbar,\r\n  Container,\r\n  Nav,\r\n  Column,\r\n  Row,\r\n  Col,\r\n  Modal,\r\n  Button,\r\n  Form,\r\n  Spinner,\r\n} from \"react-bootstrap\";\r\n\r\n// function templateModal(props) {\r\n//   const [readOnly, setReadOnly] = React.useState(false);\r\n//   const [loadingSpinner, setLoadingSpinner] = React.useState(false);\r\n\r\n//   const oldPassword = React.useRef();\r\n\r\n//   const handleKeyPress = (event) => {\r\n//       if (event.key === \"Enter\") {\r\n//         onSubmit();\r\n//       }\r\n//   };\r\n\r\n//   function onSubmit() {\r\n//     setReadOnly(true)\r\n//   }\r\n\r\n//   return (\r\n//     <Modal\r\n//       {...props}\r\n//       size=\"lg\"\r\n//       aria-labelledby=\"contained-modal-title-vcenter\"\r\n//       centered\r\n//     >\r\n//       <Modal.Header closeButton>\r\n//         <Modal.Title id=\"contained-modal-title-vcenter\">Add User</Modal.Title>\r\n//       </Modal.Header>\r\n//       <Modal.Body>\r\n//         <Form.Group className=\"mb-3\">\r\n//           <Form.Label>Short code</Form.Label>\r\n//           <Form.Control\r\n//             type=\"text\"\r\n//             placeholder=\"e.g. ab1234\"\r\n//             readOnly={readOnly ? true : false}\r\n//           />\r\n//         </Form.Group>\r\n//       </Modal.Body>\r\n//       <Modal.Footer>\r\n//         <Button variant=\"primary\" type=\"submit\">\r\n//           Change Password\r\n//         </Button>\r\n//         <Button variant=\"secondary\" onClick={props.onHide}>\r\n//           Cancel\r\n//         </Button>\r\n//       </Modal.Footer>\r\n//     </Modal>\r\n//   );\r\n// }\r\n\r\nfunction DeleteUserModal(props) {\r\n  const [readOnly, setReadOnly] = React.useState(false);\r\n  const [loadingSpinner, setLoadingSpinner] = React.useState(false);\r\n\r\n  const oldPassword = React.useRef();\r\n  const newPassword = React.useRef();\r\n\r\n  const handleKeyPress = (event) => {\r\n    if (event.key === \"Enter\") {\r\n      onSubmit();\r\n    }\r\n  };\r\n\r\n  function onSubmit() {\r\n    setReadOnly(true);\r\n  }\r\n\r\n  return (\r\n    <Modal\r\n      {...props}\r\n      size=\"lg\"\r\n      aria-labelledby=\"contained-modal-title-vcenter\"\r\n      centered\r\n    >\r\n      <Modal.Header closeButton>\r\n        <Modal.Title id=\"contained-modal-title-vcenter\">Add User</Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        <Form.Group className=\"mb-3\">\r\n          <Form.Label>Short code</Form.Label>\r\n          <Form.Control\r\n            type=\"text\"\r\n            placeholder=\"e.g. ab1234\"\r\n            readOnly={readOnly ? true : false}\r\n          />\r\n        </Form.Group>\r\n      </Modal.Body>\r\n      <Modal.Footer>\r\n        <Button variant=\"primary\" type=\"submit\">\r\n          Change Password\r\n        </Button>\r\n        <Button variant=\"secondary\" onClick={props.onHide}>\r\n          Cancel\r\n        </Button>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n}\r\n\r\nfunction ChangePasswordModal(props) {\r\n  const [readOnly, setReadOnly] = React.useState(false);\r\n  const [loadingSpinner, setLoadingSpinner] = React.useState(false);\r\n  const [passwordError, setPasswordError] = React.useState(false);\r\n  const [showSuccessMessage, setShowSuccessMessage] = React.useState(false);\r\n  const [showErrorMessage, setShowErrorMessage] = React.useState(false);\r\n\r\n  const oldPassword = React.useRef();\r\n  const newPassword = React.useRef();\r\n\r\n  const handleKeyPress = (event) => {\r\n    resetModal();\r\n    if (event.key === \"Enter\") {\r\n      onSubmit();\r\n    }\r\n  };\r\n\r\n  function resetModal() {\r\n    setShowSuccessMessage(false);\r\n    setShowErrorMessage(false);\r\n    setPasswordError(false);\r\n  }\r\n\r\n  function onSubmit() {\r\n    setReadOnly(true);\r\n    const oldPass = oldPassword.current.value;\r\n    const newPass = newPassword.current.value;\r\n    const requestOptions = {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${sessionStorage.getItem(\"token\")}`,\r\n      },\r\n      body: JSON.stringify({ old_password: oldPass, new_password: newPass }),\r\n    };\r\n    fetch(\"/api/changepass\", requestOptions)\r\n      .then((response) => {\r\n        if (response.ok) {\r\n          setLoadingSpinner(false);\r\n          setShowSuccessMessage(true);\r\n          setTimeout(() => {\r\n            props.onHide();\r\n            setReadOnly(false);\r\n            setShowSuccessMessage(false);\r\n          }, 2000);\r\n        } else if (response.status == 401) {\r\n          console.log(\"Incorrect old password\");\r\n          setPasswordError(true);\r\n          throw new Error(response.statusText);\r\n        } else if (response.status == 403) {\r\n          console.log(\"Auth token bad\");\r\n          props.kick();\r\n          throw new Error(response.statusText);\r\n        } else {\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n        setReadOnly(false);\r\n        setLoadingSpinner(false);\r\n        setShowErrorMessage(true);\r\n      });\r\n  }\r\n\r\n  return (\r\n    <Modal\r\n      {...props}\r\n      size=\"lg\"\r\n      aria-labelledby=\"contained-modal-title-vcenter\"\r\n      centered\r\n    >\r\n      <Modal.Header closeButton>\r\n        <Modal.Title id=\"contained-modal-title-vcenter\">\r\n          Change Admin Password\r\n        </Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        <Form>\r\n          <Form.Group className=\"mb-3\">\r\n            <Form.Label>Old password</Form.Label>\r\n            <Form.Control\r\n              type=\"password\"\r\n              placeholder=\"\"\r\n              readOnly={readOnly ? true : false}\r\n              ref={oldPassword}\r\n              isInvalid={passwordError}\r\n              isValid={showSuccessMessage}\r\n              onKeyPress={handleKeyPress}\r\n            />\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              Incorrect old password, try again\r\n            </Form.Control.Feedback>\r\n          </Form.Group>\r\n          <Form.Group className=\"mb-3\">\r\n            <Form.Label>New password</Form.Label>\r\n            <Form.Control\r\n              type=\"password\"\r\n              placeholder=\"\"\r\n              readOnly={readOnly ? true : false}\r\n              ref={newPassword}\r\n              onKeyPress={handleKeyPress}\r\n              isValid={showSuccessMessage}\r\n            />\r\n          </Form.Group>\r\n        </Form>\r\n      </Modal.Body>\r\n      <AdminModalFooter\r\n        loadingSpinner={loadingSpinner}\r\n        showErrorMessage={showErrorMessage}\r\n        showSuccessMessage={showSuccessMessage}\r\n        readOnly={readOnly}\r\n        onSubmit={onSubmit}\r\n        onHide={props.onHide}\r\n        cancel={\"Cancel\"}\r\n        actionButton={\"Change Password\"}\r\n      />\r\n    </Modal>\r\n  );\r\n}\r\n\r\nfunction AddUserModal(props) {\r\n  const [readOnly, setReadOnly] = React.useState(false);\r\n  const [cardID, setCardID] = React.useState(\"\");\r\n  const [scannerEnabled, setScannerEnabled] = React.useState(false);\r\n  const [loadingSpinner, setLoadingSpinner] = React.useState(false);\r\n  const [showSuccessMessage, setShowSuccessMessage] = React.useState(false);\r\n  const [showErrorMessage, setShowErrorMessage] = React.useState(false);\r\n  const [shortCodeInvalid, setShortCodeInvalid] = React.useState(false);\r\n  const [cardIDInvalid, setCardIDInvalid] = React.useState(false);\r\n\r\n  const cardIdInput = React.useRef();\r\n  const shortCode = React.useRef();\r\n\r\n  const handleKeyPress = (event) => {\r\n    resetModal();\r\n    if (event.key === \"Enter\") {\r\n      if (scannerEnabled) {\r\n        //if enter key prevent default\r\n        event.preventDefault();\r\n        console.log(cardIdInput.current.value);\r\n        if (cardIdInput.current.value.length === 10) {\r\n          //if input data length 10, run finduser\r\n          console.log(\"here\");\r\n          const currCardId = cardIdInput.current.value;\r\n          setCardID(currCardId);\r\n        }\r\n      } else {\r\n        onSubmit();\r\n        readOnly(true);\r\n      }\r\n    }\r\n  };\r\n\r\n  function resetModal() {\r\n    setShowSuccessMessage(false);\r\n    setShowErrorMessage(false);\r\n    setShortCodeInvalid(false);\r\n    setCardIDInvalid(false);\r\n  }\r\n\r\n  function onSubmit() {\r\n    const shortC = shortCode.current.value;\r\n    const card = cardIdInput.current.value;\r\n    if (!shortC) {\r\n      setShortCodeInvalid(true);\r\n    } else if (!card) {\r\n      setCardIDInvalid(true);\r\n    } else {\r\n      setReadOnly(true);\r\n      const requestOptions = {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: `Bearer ${sessionStorage.getItem(\"token\")}`,\r\n        },\r\n        body: JSON.stringify({ short_code: shortC, card_id: card }),\r\n      };\r\n      fetch(\"/api/addUser\", requestOptions)\r\n        .then((response) => {\r\n          if (response.ok) {\r\n            setLoadingSpinner(false);\r\n            setShowSuccessMessage(true);\r\n            setTimeout(() => {\r\n              props.onHide();\r\n              setReadOnly(false);\r\n              setShowSuccessMessage(false);\r\n              setCardID(\"\");\r\n            }, 2000);\r\n          } else if (response.status == 403) {\r\n            console.log(\"Auth token bad\");\r\n            props.kick();\r\n            throw new Error(response.statusText);\r\n          } else {\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n          setReadOnly(false);\r\n          setLoadingSpinner(false);\r\n          setShowErrorMessage(true);\r\n        });\r\n    }\r\n  }\r\n\r\n  React.useEffect(() => {\r\n    if (scannerEnabled) {\r\n      cardIdInput.current.value = \"\";\r\n      cardIdInput.current.focus();\r\n    }\r\n  }, [scannerEnabled]);\r\n\r\n  return (\r\n    <Modal\r\n      {...props}\r\n      size=\"lg\"\r\n      aria-labelledby=\"contained-modal-title-vcenter\"\r\n      centered\r\n    >\r\n      <input\r\n        className=\"scanner-input\"\r\n        ref={cardIdInput}\r\n        onKeyPress={handleKeyPress}\r\n        onBlur={() => setScannerEnabled(false)}\r\n      />\r\n      <Modal.Header closeButton>\r\n        <Modal.Title id=\"contained-modal-title-vcenter\">Add User</Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        <Form.Group className=\"mb-3\">\r\n          <Form.Label>Short code</Form.Label>\r\n          <Form.Control\r\n            type=\"text\"\r\n            placeholder=\"e.g. ab1234\"\r\n            readOnly={readOnly ? true : false}\r\n            onKeyPress={handleKeyPress}\r\n            ref={shortCode}\r\n            isInvalid={shortCodeInvalid}\r\n          />\r\n          <Form.Control.Feedback type=\"invalid\">\r\n            Please enter a short code.\r\n          </Form.Control.Feedback>\r\n        </Form.Group>\r\n        <Form.Group className=\"mb-3\">\r\n          <Form.Label>Card ID</Form.Label>\r\n          <Row>\r\n            <Col xs=\"auto\">\r\n              <Button\r\n                className=\"scanner-button\"\r\n                onClick={() => setScannerEnabled(true)}\r\n                variant=\"primary\"\r\n                disabled={scannerEnabled || readOnly ? true : false}\r\n              >\r\n                {scannerEnabled ? \"Scan card\" : \"Enable Scanner\"}\r\n              </Button>\r\n            </Col>\r\n            <Col>\r\n              <Form.Control\r\n                type=\"password\"\r\n                placeholder=\"\"\r\n                value={cardID}\r\n                readOnly\r\n                isInvalid={cardIDInvalid}\r\n              />\r\n              <Form.Control.Feedback type=\"invalid\">\r\n                Please add a card ID.\r\n              </Form.Control.Feedback>\r\n            </Col>\r\n          </Row>\r\n        </Form.Group>\r\n      </Modal.Body>\r\n      <AdminModalFooter\r\n        loadingSpinner={loadingSpinner}\r\n        showErrorMessage={showErrorMessage}\r\n        showSuccessMessage={showSuccessMessage}\r\n        readOnly={readOnly}\r\n        onSubmit={onSubmit}\r\n        onHide={props.onHide}\r\n        cancel={\"Cancel\"}\r\n        actionButton={\"Add User\"}\r\n      />\r\n    </Modal>\r\n  );\r\n}\r\n\r\nfunction AdminModalFooter(props) {\r\n  return (\r\n    <Modal.Footer>\r\n      {props.loadingSpinner ? (\r\n        <Col xs=\"auto\">\r\n          <Spinner className=\"mra\" animation=\"border\" />\r\n        </Col>\r\n      ) : (\r\n        <></>\r\n      )}\r\n      {props.showSuccessMessage ? (\r\n        <Col xs=\"auto\">\r\n          <div className=\"mra success-message\">Success</div>\r\n        </Col>\r\n      ) : (\r\n        <></>\r\n      )}\r\n      {props.showErrorMessage ? (\r\n        <Col xs=\"auto\">\r\n          <div className=\"mra error-message\">Error</div>\r\n        </Col>\r\n      ) : (\r\n        <></>\r\n      )}\r\n      <Button variant=\"secondary\" onClick={props.onHide} className=\"mla\">\r\n        {props.cancel}\r\n      </Button>\r\n      <Button\r\n        variant=\"primary\"\r\n        type=\"submit\"\r\n        onClick={() => props.onSubmit()}\r\n        disabled={props.readOnly ? true : false}\r\n      >\r\n        {props.actionButton}\r\n      </Button>\r\n    </Modal.Footer>\r\n  );\r\n}\r\n\r\nfunction Admin(props) {\r\n  const [addUserModalShow, setAddUserModalShow] = React.useState(false);\r\n  const [delUserModalShow, setDelUserModalShow] = React.useState(false);\r\n  const [changePassModalShow, setChangePassModalShow] = React.useState(false);\r\n  const [loggedIn, setLoggedIn] = React.useState(false);\r\n  const [loginReadOnly, setLoginReadOnly] = React.useState(false);\r\n  const [passwordError, setPasswordError] = React.useState(false);\r\n  const [passwordErrorMessage, setPasswordErrorMessage] = React.useState(\"\");\r\n  const [showPasswordSpinner, setShowPasswordSpinner] = React.useState(false);\r\n  const [showKickedMessage, setShowKickedMessage] = React.useState(false);\r\n\r\n  const loginPassword = React.useRef();\r\n\r\n  function onLoginButton() {\r\n    const password = loginPassword.current.value;\r\n    setShowPasswordSpinner(true);\r\n    setLoginReadOnly(true);\r\n    const requestOptions = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ password: password }),\r\n    };\r\n    fetch(\"/api/login\", requestOptions)\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        setShowPasswordSpinner(false);\r\n        sessionStorage.setItem(\"token\", data.token);\r\n        setLoginReadOnly(false);\r\n        setLoggedIn(true);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n        setShowPasswordSpinner(false);\r\n        setLoginReadOnly(false);\r\n        setPasswordError(true);\r\n        setPasswordErrorMessage(\"Incorrect password, try again\");\r\n      });\r\n  }\r\n\r\n  function onLogoutButton() {\r\n    sessionStorage.removeItem(\"token\");\r\n    setLoggedIn(false);\r\n  }\r\n\r\n  function onKickedOut() {\r\n    sessionStorage.removeItem(\"token\");\r\n    setLoggedIn(false);\r\n    setShowKickedMessage(true);\r\n  }\r\n\r\n  function handleLoginEnter(event) {\r\n    setPasswordError(false);\r\n    if (event.key === \"Enter\") {\r\n      onLoginButton();\r\n    }\r\n  }\r\n\r\n  React.useEffect(() => {\r\n    if (sessionStorage.getItem(\"token\")) {\r\n      setLoggedIn(true);\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <Navbar bg=\"light\">\r\n        <Container>\r\n          <Navbar.Brand href=\"\">AceX Admin</Navbar.Brand>\r\n          {loggedIn ? (\r\n            <Nav.Link onClick={() => onLogoutButton()}>Logout</Nav.Link>\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </Container>\r\n      </Navbar>\r\n      {loggedIn ? (\r\n        <Container>\r\n          <h1>Welcome</h1>\r\n          <Row className=\"justify-content-md-left mt50\">\r\n            <Col xs={6} md={4} xl={3}>\r\n              <div\r\n                onClick={() => setAddUserModalShow(true)}\r\n                className=\"admin-card\"\r\n              >\r\n                <h2 className=\"mta\">Add user</h2>\r\n              </div>\r\n            </Col>\r\n            <Col xs={6} md={4} xl={3}>\r\n              <div\r\n                onClick={() => setDelUserModalShow(true)}\r\n                className=\"admin-card\"\r\n              >\r\n                <h2 className=\"mta\">Delete user</h2>\r\n              </div>\r\n            </Col>\r\n            <Col xs={6} md={4} xl={3}>\r\n              <div\r\n                onClick={() => setChangePassModalShow(true)}\r\n                className=\"admin-card\"\r\n              >\r\n                <h2 className=\"mta\">Change password</h2>\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n          <AddUserModal\r\n            show={addUserModalShow}\r\n            onHide={() => setAddUserModalShow(false)}\r\n            kick={() => onKickedOut()}\r\n          />\r\n          <DeleteUserModal\r\n            show={delUserModalShow}\r\n            onHide={() => setDelUserModalShow(false)}\r\n            kick={() => onKickedOut()}\r\n          />\r\n          <ChangePasswordModal\r\n            show={changePassModalShow}\r\n            onHide={() => setChangePassModalShow(false)}\r\n            kick={() => onKickedOut()}\r\n          />\r\n        </Container>\r\n      ) : (\r\n        <Container>\r\n          <h1>Please enter the admin password</h1>\r\n          <Form.Group className=\"mt50 mb-3\">\r\n            {showKickedMessage ? (\r\n              <div className=\"mb10 error-message\">\r\n                Session expired, please log in again\r\n              </div>\r\n            ) : (\r\n              <> </>\r\n            )}\r\n            <Row>\r\n              <Col xs=\"9\" md=\"4\">\r\n                <Form.Control\r\n                  type=\"password\"\r\n                  placeholder=\"\"\r\n                  readOnly={loginReadOnly ? true : false}\r\n                  ref={loginPassword}\r\n                  onKeyPress={handleLoginEnter}\r\n                  isInvalid={passwordError}\r\n                />\r\n                <Form.Control.Feedback type=\"invalid\">\r\n                  {passwordErrorMessage}\r\n                </Form.Control.Feedback>\r\n              </Col>\r\n              <Col xs=\"auto\">\r\n                <Button\r\n                  onClick={() => onLoginButton(true)}\r\n                  type=\"submit\"\r\n                  disabled={loginReadOnly ? true : false}\r\n                >\r\n                  Login\r\n                </Button>\r\n              </Col>\r\n              {showPasswordSpinner ? (\r\n                <Col xs=\"auto\">\r\n                  <Spinner animation=\"border\" />\r\n                </Col>\r\n              ) : (\r\n                <></>\r\n              )}\r\n            </Row>\r\n          </Form.Group>\r\n        </Container>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Admin;\r\n","// client/src/App.js\n\nimport React from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport { BrowserRouter, Route, Routes } from \"react-router-dom\";\n\nimport Dashboard from \"./pages/Dashboard\";\nimport Admin from \"./pages/Admin\";\n\nimport { Container } from \"react-bootstrap\";\n\nfunction App() {\n  const [data, setData] = React.useState(null);\n\n  return (\n    <BrowserRouter className=\"App\">\n        <Routes>\n          <Route path=\"/admin\" element={<Admin />} />\n          <Route path=\"/\" element={<Dashboard />} />\n        </Routes>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}